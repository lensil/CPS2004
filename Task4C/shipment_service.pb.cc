// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shipment_service.proto

#include "shipment_service.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace com {
namespace cps2004 {

inline constexpr CalculateTotalPriceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : totalprice_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CalculateTotalPriceResponse::CalculateTotalPriceResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CalculateTotalPriceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateTotalPriceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateTotalPriceResponseDefaultTypeInternal() {}
  union {
    CalculateTotalPriceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateTotalPriceResponseDefaultTypeInternal _CalculateTotalPriceResponse_default_instance_;

inline constexpr CalculateTotalPriceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        shipment_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CalculateTotalPriceRequest::CalculateTotalPriceRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CalculateTotalPriceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateTotalPriceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateTotalPriceRequestDefaultTypeInternal() {}
  union {
    CalculateTotalPriceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateTotalPriceRequestDefaultTypeInternal _CalculateTotalPriceRequest_default_instance_;
}  // namespace cps2004
}  // namespace com
static ::_pb::Metadata file_level_metadata_shipment_5fservice_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_shipment_5fservice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_shipment_5fservice_2eproto = nullptr;
const ::uint32_t TableStruct_shipment_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::com::cps2004::CalculateTotalPriceRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::CalculateTotalPriceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::CalculateTotalPriceRequest, _impl_.shipment_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::com::cps2004::CalculateTotalPriceResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::CalculateTotalPriceResponse, _impl_.totalprice_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::com::cps2004::CalculateTotalPriceRequest)},
        {10, -1, -1, sizeof(::com::cps2004::CalculateTotalPriceResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::com::cps2004::_CalculateTotalPriceRequest_default_instance_._instance,
    &::com::cps2004::_CalculateTotalPriceResponse_default_instance_._instance,
};
const char descriptor_table_protodef_shipment_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\026shipment_service.proto\022\013com.cps2004\032\025d"
    "ata_structures.proto\"E\n\032CalculateTotalPr"
    "iceRequest\022\'\n\010shipment\030\001 \001(\0132\025.com.cps20"
    "04.Shipment\"1\n\033CalculateTotalPriceRespon"
    "se\022\022\n\ntotalPrice\030\001 \001(\0012{\n\017ShipmentServic"
    "e\022h\n\023CalculateTotalPrice\022\'.com.cps2004.C"
    "alculateTotalPriceRequest\032(.com.cps2004."
    "CalculateTotalPriceResponseb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_shipment_5fservice_2eproto_deps[1] =
    {
        &::descriptor_table_data_5fstructures_2eproto,
};
static ::absl::once_flag descriptor_table_shipment_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_shipment_5fservice_2eproto = {
    false,
    false,
    315,
    descriptor_table_protodef_shipment_5fservice_2eproto,
    "shipment_service.proto",
    &descriptor_table_shipment_5fservice_2eproto_once,
    descriptor_table_shipment_5fservice_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_shipment_5fservice_2eproto::offsets,
    file_level_metadata_shipment_5fservice_2eproto,
    file_level_enum_descriptors_shipment_5fservice_2eproto,
    file_level_service_descriptors_shipment_5fservice_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_shipment_5fservice_2eproto_getter() {
  return &descriptor_table_shipment_5fservice_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_shipment_5fservice_2eproto(&descriptor_table_shipment_5fservice_2eproto);
namespace com {
namespace cps2004 {
// ===================================================================

class CalculateTotalPriceRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CalculateTotalPriceRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CalculateTotalPriceRequest, _impl_._has_bits_);
  static const ::com::cps2004::Shipment& shipment(const CalculateTotalPriceRequest* msg);
  static void set_has_shipment(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Shipment& CalculateTotalPriceRequest::_Internal::shipment(const CalculateTotalPriceRequest* msg) {
  return *msg->_impl_.shipment_;
}
void CalculateTotalPriceRequest::clear_shipment() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.shipment_ != nullptr) _impl_.shipment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CalculateTotalPriceRequest::CalculateTotalPriceRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.CalculateTotalPriceRequest)
}
inline PROTOBUF_NDEBUG_INLINE CalculateTotalPriceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CalculateTotalPriceRequest::CalculateTotalPriceRequest(
    ::google::protobuf::Arena* arena,
    const CalculateTotalPriceRequest& from)
    : ::google::protobuf::Message(arena) {
  CalculateTotalPriceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.shipment_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Shipment>(arena, *from._impl_.shipment_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:com.cps2004.CalculateTotalPriceRequest)
}
inline PROTOBUF_NDEBUG_INLINE CalculateTotalPriceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CalculateTotalPriceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.shipment_ = {};
}
CalculateTotalPriceRequest::~CalculateTotalPriceRequest() {
  // @@protoc_insertion_point(destructor:com.cps2004.CalculateTotalPriceRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CalculateTotalPriceRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.shipment_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CalculateTotalPriceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.CalculateTotalPriceRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.shipment_ != nullptr);
    _impl_.shipment_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CalculateTotalPriceRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CalculateTotalPriceRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CalculateTotalPriceRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CalculateTotalPriceRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .com.cps2004.Shipment shipment = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CalculateTotalPriceRequest, _impl_.shipment_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Shipment shipment = 1;
    {PROTOBUF_FIELD_OFFSET(CalculateTotalPriceRequest, _impl_.shipment_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Shipment>()},
  }}, {{
  }},
};

::uint8_t* CalculateTotalPriceRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.CalculateTotalPriceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Shipment shipment = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::shipment(this),
        _Internal::shipment(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.CalculateTotalPriceRequest)
  return target;
}

::size_t CalculateTotalPriceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.CalculateTotalPriceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.cps2004.Shipment shipment = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.shipment_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CalculateTotalPriceRequest::_class_data_ = {
    CalculateTotalPriceRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CalculateTotalPriceRequest::GetClassData() const {
  return &_class_data_;
}

void CalculateTotalPriceRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CalculateTotalPriceRequest*>(&to_msg);
  auto& from = static_cast<const CalculateTotalPriceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.CalculateTotalPriceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_shipment()->::com::cps2004::Shipment::MergeFrom(
        from._internal_shipment());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateTotalPriceRequest::CopyFrom(const CalculateTotalPriceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.CalculateTotalPriceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CalculateTotalPriceRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CalculateTotalPriceRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CalculateTotalPriceRequest::InternalSwap(CalculateTotalPriceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.shipment_, other->_impl_.shipment_);
}

::google::protobuf::Metadata CalculateTotalPriceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shipment_5fservice_2eproto_getter, &descriptor_table_shipment_5fservice_2eproto_once,
      file_level_metadata_shipment_5fservice_2eproto[0]);
}
// ===================================================================

class CalculateTotalPriceResponse::_Internal {
 public:
};

CalculateTotalPriceResponse::CalculateTotalPriceResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.CalculateTotalPriceResponse)
}
CalculateTotalPriceResponse::CalculateTotalPriceResponse(
    ::google::protobuf::Arena* arena, const CalculateTotalPriceResponse& from)
    : CalculateTotalPriceResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CalculateTotalPriceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CalculateTotalPriceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.totalprice_ = {};
}
CalculateTotalPriceResponse::~CalculateTotalPriceResponse() {
  // @@protoc_insertion_point(destructor:com.cps2004.CalculateTotalPriceResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CalculateTotalPriceResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CalculateTotalPriceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.CalculateTotalPriceResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.totalprice_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CalculateTotalPriceResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CalculateTotalPriceResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CalculateTotalPriceResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // double totalPrice = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(CalculateTotalPriceResponse, _impl_.totalprice_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double totalPrice = 1;
    {PROTOBUF_FIELD_OFFSET(CalculateTotalPriceResponse, _impl_.totalprice_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CalculateTotalPriceResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.CalculateTotalPriceResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double totalPrice = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_totalprice = this->_internal_totalprice();
  ::uint64_t raw_totalprice;
  memcpy(&raw_totalprice, &tmp_totalprice, sizeof(tmp_totalprice));
  if (raw_totalprice != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_totalprice(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.CalculateTotalPriceResponse)
  return target;
}

::size_t CalculateTotalPriceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.CalculateTotalPriceResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double totalPrice = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_totalprice = this->_internal_totalprice();
  ::uint64_t raw_totalprice;
  memcpy(&raw_totalprice, &tmp_totalprice, sizeof(tmp_totalprice));
  if (raw_totalprice != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CalculateTotalPriceResponse::_class_data_ = {
    CalculateTotalPriceResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CalculateTotalPriceResponse::GetClassData() const {
  return &_class_data_;
}

void CalculateTotalPriceResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CalculateTotalPriceResponse*>(&to_msg);
  auto& from = static_cast<const CalculateTotalPriceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.CalculateTotalPriceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_totalprice = from._internal_totalprice();
  ::uint64_t raw_totalprice;
  memcpy(&raw_totalprice, &tmp_totalprice, sizeof(tmp_totalprice));
  if (raw_totalprice != 0) {
    _this->_internal_set_totalprice(from._internal_totalprice());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateTotalPriceResponse::CopyFrom(const CalculateTotalPriceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.CalculateTotalPriceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CalculateTotalPriceResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CalculateTotalPriceResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CalculateTotalPriceResponse::InternalSwap(CalculateTotalPriceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.totalprice_, other->_impl_.totalprice_);
}

::google::protobuf::Metadata CalculateTotalPriceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shipment_5fservice_2eproto_getter, &descriptor_table_shipment_5fservice_2eproto_once,
      file_level_metadata_shipment_5fservice_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace cps2004
}  // namespace com
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
