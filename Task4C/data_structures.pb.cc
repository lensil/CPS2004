// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_structures.proto

#include "data_structures.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace com {
namespace cps2004 {

inline constexpr Supplier::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        supplierid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Supplier::Supplier(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SupplierDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SupplierDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SupplierDefaultTypeInternal() {}
  union {
    Supplier _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SupplierDefaultTypeInternal _Supplier_default_instance_;

inline constexpr Plane::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        airspaces_{},
        transport_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Plane::Plane(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlaneDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlaneDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlaneDefaultTypeInternal() {}
  union {
    Plane _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlaneDefaultTypeInternal _Plane_default_instance_;

inline constexpr Ship::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        harbours_{},
        transport_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Ship::Ship(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ShipDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShipDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShipDefaultTypeInternal() {}
  union {
    Ship _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShipDefaultTypeInternal _Ship_default_instance_;

inline constexpr Transport::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : transportspeed_{0},
        costperkm_{0},
        transportid_{0},
        transport_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Transport::Transport(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TransportDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransportDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransportDefaultTypeInternal() {}
  union {
    Transport _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransportDefaultTypeInternal _Transport_default_instance_;

inline constexpr Truck::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        roads_{},
        transport_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Truck::Truck(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TruckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TruckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TruckDefaultTypeInternal() {}
  union {
    Truck _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TruckDefaultTypeInternal _Truck_default_instance_;

inline constexpr Package::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cost_{0},
        packagingunits_{0},
        packageid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Package::Package(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PackageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PackageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PackageDefaultTypeInternal() {}
  union {
    Package _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PackageDefaultTypeInternal _Package_default_instance_;

inline constexpr Action::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rating_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        videogame_{nullptr},
        noofplayers_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Action::Action(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ActionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActionDefaultTypeInternal() {}
  union {
    Action _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActionDefaultTypeInternal _Action_default_instance_;

inline constexpr Book::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        publisher_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        author_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        product_{nullptr},
        pages_{0},
        book_type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Book::Book(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BookDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BookDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BookDefaultTypeInternal() {}
  union {
    Book _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BookDefaultTypeInternal _Book_default_instance_;

inline constexpr Camera::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        electronics_{nullptr},
        megapixels_{0},
        zoom_{0},
        wirelessconnectivity_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Camera::Camera(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CameraDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraDefaultTypeInternal() {}
  union {
    Camera _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraDefaultTypeInternal _Camera_default_instance_;

inline constexpr Chair::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        furniture_{nullptr},
        seatlength_{0},
        armrests_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Chair::Chair(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChairDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChairDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChairDefaultTypeInternal() {}
  union {
    Chair _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChairDefaultTypeInternal _Chair_default_instance_;

inline constexpr Clothes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        size_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        brand_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        material_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        product_{nullptr},
        clothes_type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Clothes::Clothes(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ClothesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClothesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClothesDefaultTypeInternal() {}
  union {
    Clothes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClothesDefaultTypeInternal _Clothes_default_instance_;

inline constexpr Electronics::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        manufacturer_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        product_{nullptr},
        warranty_{0},
        electronics_type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Electronics::Electronics(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ElectronicsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ElectronicsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ElectronicsDefaultTypeInternal() {}
  union {
    Electronics _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ElectronicsDefaultTypeInternal _Electronics_default_instance_;

inline constexpr FictionBook::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        genre_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        publicationdate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        book_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR FictionBook::FictionBook(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FictionBookDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FictionBookDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FictionBookDefaultTypeInternal() {}
  union {
    FictionBook _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FictionBookDefaultTypeInternal _FictionBook_default_instance_;

inline constexpr Food::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        expirationdate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        product_{nullptr},
        weight_{0},
        food_type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Food::Food(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FoodDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FoodDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FoodDefaultTypeInternal() {}
  union {
    Food _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FoodDefaultTypeInternal _Food_default_instance_;

inline constexpr Fruit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        countryoforigin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        food_{nullptr},
        organic_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Fruit::Fruit(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FruitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FruitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FruitDefaultTypeInternal() {}
  union {
    Fruit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FruitDefaultTypeInternal _Fruit_default_instance_;

inline constexpr Furniture::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        material_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dimensions_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        product_{nullptr},
        furniture_type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Furniture::Furniture(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FurnitureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FurnitureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FurnitureDefaultTypeInternal() {}
  union {
    Furniture _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FurnitureDefaultTypeInternal _Furniture_default_instance_;

inline constexpr Laptop::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        operatingsystem_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        electronics_{nullptr},
        screensize_{0},
        ram_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Laptop::Laptop(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LaptopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LaptopDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LaptopDefaultTypeInternal() {}
  union {
    Laptop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LaptopDefaultTypeInternal _Laptop_default_instance_;

inline constexpr Pants::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        clothes_{nullptr},
        inseam_{0},
        waist_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Pants::Pants(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PantsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PantsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PantsDefaultTypeInternal() {}
  union {
    Pants _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PantsDefaultTypeInternal _Pants_default_instance_;

inline constexpr PremadeLunch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ingredients_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        allergens_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        food_{nullptr},
        perishable_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PremadeLunch::PremadeLunch(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PremadeLunchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PremadeLunchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PremadeLunchDefaultTypeInternal() {}
  union {
    PremadeLunch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PremadeLunchDefaultTypeInternal _PremadeLunch_default_instance_;

inline constexpr Product::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        supplier_{nullptr},
        productid_{0},
        price_{0},
        quantity_{0},
        volume_{0},
        product_type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Product::Product(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProductDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProductDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProductDefaultTypeInternal() {}
  union {
    Product _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProductDefaultTypeInternal _Product_default_instance_;

inline constexpr RPG::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        story_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        videogame_{nullptr},
        multiplayer_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RPG::RPG(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RPGDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RPGDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RPGDefaultTypeInternal() {}
  union {
    RPG _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RPGDefaultTypeInternal _RPG_default_instance_;

inline constexpr TShirt::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        collar_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        clothes_{nullptr},
        graphics_{false} {}

template <typename>
PROTOBUF_CONSTEXPR TShirt::TShirt(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TShirtDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TShirtDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TShirtDefaultTypeInternal() {}
  union {
    TShirt _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TShirtDefaultTypeInternal _TShirt_default_instance_;

inline constexpr Table::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        shape_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        furniture_{nullptr},
        extendable_{false},
        nooflegs_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Table::Table(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableDefaultTypeInternal() {}
  union {
    Table _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableDefaultTypeInternal _Table_default_instance_;

inline constexpr Textbook::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subject_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        book_{nullptr},
        edition_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Textbook::Textbook(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TextbookDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TextbookDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TextbookDefaultTypeInternal() {}
  union {
    Textbook _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TextbookDefaultTypeInternal _Textbook_default_instance_;

inline constexpr VideoGame::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        platform_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        developer_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        product_{nullptr},
        videoGame_type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR VideoGame::VideoGame(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VideoGameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VideoGameDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VideoGameDefaultTypeInternal() {}
  union {
    VideoGame _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VideoGameDefaultTypeInternal _VideoGame_default_instance_;

inline constexpr StockItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        product_{nullptr},
        quantity_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StockItem::StockItem(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StockItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StockItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StockItemDefaultTypeInternal() {}
  union {
    StockItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StockItemDefaultTypeInternal _StockItem_default_instance_;

inline constexpr ShipmentItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        product_{nullptr},
        package_{nullptr},
        id_{0},
        quantity_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ShipmentItem::ShipmentItem(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ShipmentItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShipmentItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShipmentItemDefaultTypeInternal() {}
  union {
    ShipmentItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShipmentItemDefaultTypeInternal _ShipmentItem_default_instance_;

inline constexpr Stock::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : currentstock_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Stock::Stock(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StockDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StockDefaultTypeInternal() {}
  union {
    Stock _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StockDefaultTypeInternal _Stock_default_instance_;

inline constexpr Shipment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        packageditems_{},
        dispatcheddate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transport_{nullptr},
        distance_{0},
        dispatched_{false},
        shipmentid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Shipment::Shipment(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ShipmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShipmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShipmentDefaultTypeInternal() {}
  union {
    Shipment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShipmentDefaultTypeInternal _Shipment_default_instance_;

inline constexpr Customer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : shipments_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        distancefromwarehouse_{0},
        id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Customer::Customer(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CustomerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomerDefaultTypeInternal() {}
  union {
    Customer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomerDefaultTypeInternal _Customer_default_instance_;

inline constexpr State::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        transports_{},
        suppliers_{},
        customers_{},
        packages_{},
        stock_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR State::State(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StateDefaultTypeInternal() {}
  union {
    State _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StateDefaultTypeInternal _State_default_instance_;
}  // namespace cps2004
}  // namespace com
static ::_pb::Metadata file_level_metadata_data_5fstructures_2eproto[31];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_data_5fstructures_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_data_5fstructures_2eproto = nullptr;
const ::uint32_t TableStruct_data_5fstructures_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Transport, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Transport, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Transport, _impl_.transportspeed_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Transport, _impl_.costperkm_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Transport, _impl_.transportid_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Transport, _impl_.transport_type_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Ship, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Ship, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Ship, _impl_.transport_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Ship, _impl_.harbours_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Plane, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Plane, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Plane, _impl_.transport_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Plane, _impl_.airspaces_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Truck, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Truck, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Truck, _impl_.transport_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Truck, _impl_.roads_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Supplier, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Supplier, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Supplier, _impl_.supplierid_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Package, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Package, _impl_.packagingunits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Package, _impl_.cost_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Package, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Package, _impl_.packageid_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Product, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Product, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Product, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Product, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Product, _impl_.productid_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Product, _impl_.price_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Product, _impl_.quantity_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Product, _impl_.supplier_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Product, _impl_.volume_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Product, _impl_.product_type_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Book, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Book, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Book, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Book, _impl_.product_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Book, _impl_.publisher_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Book, _impl_.pages_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Book, _impl_.author_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Book, _impl_.book_type_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::FictionBook, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::FictionBook, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::FictionBook, _impl_.book_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::FictionBook, _impl_.genre_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::FictionBook, _impl_.publicationdate_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Textbook, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Textbook, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Textbook, _impl_.book_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Textbook, _impl_.subject_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Textbook, _impl_.edition_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Electronics, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Electronics, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Electronics, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Electronics, _impl_.product_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Electronics, _impl_.manufacturer_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Electronics, _impl_.warranty_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Electronics, _impl_.electronics_type_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Camera, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Camera, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Camera, _impl_.electronics_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Camera, _impl_.megapixels_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Camera, _impl_.zoom_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Camera, _impl_.wirelessconnectivity_),
    0,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Laptop, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Laptop, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Laptop, _impl_.electronics_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Laptop, _impl_.screensize_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Laptop, _impl_.operatingsystem_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Laptop, _impl_.ram_),
    0,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Food, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Food, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Food, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Food, _impl_.product_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Food, _impl_.weight_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Food, _impl_.expirationdate_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Food, _impl_.food_type_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Fruit, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Fruit, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Fruit, _impl_.food_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Fruit, _impl_.countryoforigin_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Fruit, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Fruit, _impl_.organic_),
    0,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::PremadeLunch, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::PremadeLunch, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::PremadeLunch, _impl_.food_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::PremadeLunch, _impl_.perishable_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::PremadeLunch, _impl_.ingredients_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::PremadeLunch, _impl_.allergens_),
    0,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Clothes, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Clothes, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Clothes, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Clothes, _impl_.product_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Clothes, _impl_.size_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Clothes, _impl_.brand_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Clothes, _impl_.material_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Clothes, _impl_.clothes_type_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Pants, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Pants, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Pants, _impl_.clothes_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Pants, _impl_.inseam_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Pants, _impl_.waist_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::TShirt, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::TShirt, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::TShirt, _impl_.clothes_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::TShirt, _impl_.collar_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::TShirt, _impl_.graphics_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Furniture, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Furniture, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Furniture, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Furniture, _impl_.product_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Furniture, _impl_.material_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Furniture, _impl_.dimensions_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Furniture, _impl_.furniture_type_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Table, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Table, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Table, _impl_.furniture_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Table, _impl_.extendable_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Table, _impl_.shape_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Table, _impl_.nooflegs_),
    0,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Chair, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Chair, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Chair, _impl_.furniture_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Chair, _impl_.seatlength_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Chair, _impl_.armrests_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::VideoGame, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::VideoGame, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::com::cps2004::VideoGame, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::VideoGame, _impl_.product_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::VideoGame, _impl_.platform_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::VideoGame, _impl_.developer_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::VideoGame, _impl_.videoGame_type_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Action, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Action, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Action, _impl_.videogame_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Action, _impl_.noofplayers_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Action, _impl_.rating_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::RPG, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::RPG, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::RPG, _impl_.videogame_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::RPG, _impl_.story_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::RPG, _impl_.multiplayer_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::StockItem, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::StockItem, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::StockItem, _impl_.product_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::StockItem, _impl_.quantity_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Stock, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Stock, _impl_.currentstock_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::ShipmentItem, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::ShipmentItem, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::ShipmentItem, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::ShipmentItem, _impl_.quantity_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::ShipmentItem, _impl_.product_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::ShipmentItem, _impl_.package_),
    ~0u,
    ~0u,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Shipment, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Shipment, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Shipment, _impl_.transport_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Shipment, _impl_.packageditems_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Shipment, _impl_.dispatched_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Shipment, _impl_.distance_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Shipment, _impl_.dispatcheddate_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Shipment, _impl_.shipmentid_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Customer, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Customer, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Customer, _impl_.address_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Customer, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Customer, _impl_.distancefromwarehouse_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Customer, _impl_.shipments_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::State, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::State, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::cps2004::State, _impl_.transports_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::State, _impl_.suppliers_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::State, _impl_.customers_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::State, _impl_.packages_),
    PROTOBUF_FIELD_OFFSET(::com::cps2004::State, _impl_.stock_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::com::cps2004::Transport)},
        {15, 25, -1, sizeof(::com::cps2004::Ship)},
        {27, 37, -1, sizeof(::com::cps2004::Plane)},
        {39, 49, -1, sizeof(::com::cps2004::Truck)},
        {51, -1, -1, sizeof(::com::cps2004::Supplier)},
        {61, -1, -1, sizeof(::com::cps2004::Package)},
        {73, 94, -1, sizeof(::com::cps2004::Product)},
        {106, 121, -1, sizeof(::com::cps2004::Book)},
        {127, 138, -1, sizeof(::com::cps2004::FictionBook)},
        {141, 152, -1, sizeof(::com::cps2004::Textbook)},
        {155, 169, -1, sizeof(::com::cps2004::Electronics)},
        {174, 186, -1, sizeof(::com::cps2004::Camera)},
        {190, 202, -1, sizeof(::com::cps2004::Laptop)},
        {206, 220, -1, sizeof(::com::cps2004::Food)},
        {225, 237, -1, sizeof(::com::cps2004::Fruit)},
        {241, 253, -1, sizeof(::com::cps2004::PremadeLunch)},
        {257, 272, -1, sizeof(::com::cps2004::Clothes)},
        {278, 289, -1, sizeof(::com::cps2004::Pants)},
        {292, 303, -1, sizeof(::com::cps2004::TShirt)},
        {306, 320, -1, sizeof(::com::cps2004::Furniture)},
        {325, 337, -1, sizeof(::com::cps2004::Table)},
        {341, 352, -1, sizeof(::com::cps2004::Chair)},
        {355, 369, -1, sizeof(::com::cps2004::VideoGame)},
        {374, 385, -1, sizeof(::com::cps2004::Action)},
        {388, 399, -1, sizeof(::com::cps2004::RPG)},
        {402, 412, -1, sizeof(::com::cps2004::StockItem)},
        {414, -1, -1, sizeof(::com::cps2004::Stock)},
        {423, 435, -1, sizeof(::com::cps2004::ShipmentItem)},
        {439, 453, -1, sizeof(::com::cps2004::Shipment)},
        {459, -1, -1, sizeof(::com::cps2004::Customer)},
        {472, 485, -1, sizeof(::com::cps2004::State)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::com::cps2004::_Transport_default_instance_._instance,
    &::com::cps2004::_Ship_default_instance_._instance,
    &::com::cps2004::_Plane_default_instance_._instance,
    &::com::cps2004::_Truck_default_instance_._instance,
    &::com::cps2004::_Supplier_default_instance_._instance,
    &::com::cps2004::_Package_default_instance_._instance,
    &::com::cps2004::_Product_default_instance_._instance,
    &::com::cps2004::_Book_default_instance_._instance,
    &::com::cps2004::_FictionBook_default_instance_._instance,
    &::com::cps2004::_Textbook_default_instance_._instance,
    &::com::cps2004::_Electronics_default_instance_._instance,
    &::com::cps2004::_Camera_default_instance_._instance,
    &::com::cps2004::_Laptop_default_instance_._instance,
    &::com::cps2004::_Food_default_instance_._instance,
    &::com::cps2004::_Fruit_default_instance_._instance,
    &::com::cps2004::_PremadeLunch_default_instance_._instance,
    &::com::cps2004::_Clothes_default_instance_._instance,
    &::com::cps2004::_Pants_default_instance_._instance,
    &::com::cps2004::_TShirt_default_instance_._instance,
    &::com::cps2004::_Furniture_default_instance_._instance,
    &::com::cps2004::_Table_default_instance_._instance,
    &::com::cps2004::_Chair_default_instance_._instance,
    &::com::cps2004::_VideoGame_default_instance_._instance,
    &::com::cps2004::_Action_default_instance_._instance,
    &::com::cps2004::_RPG_default_instance_._instance,
    &::com::cps2004::_StockItem_default_instance_._instance,
    &::com::cps2004::_Stock_default_instance_._instance,
    &::com::cps2004::_ShipmentItem_default_instance_._instance,
    &::com::cps2004::_Shipment_default_instance_._instance,
    &::com::cps2004::_Customer_default_instance_._instance,
    &::com::cps2004::_State_default_instance_._instance,
};
const char descriptor_table_protodef_data_5fstructures_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\025data_structures.proto\022\013com.cps2004\"\312\001\n"
    "\tTransport\022!\n\004ship\030\001 \001(\0132\021.com.cps2004.S"
    "hipH\000\022#\n\005plane\030\002 \001(\0132\022.com.cps2004.Plane"
    "H\000\022#\n\005truck\030\003 \001(\0132\022.com.cps2004.TruckH\000\022"
    "\026\n\016transportSpeed\030\004 \001(\005\022\021\n\tcostPerKm\030\005 \001"
    "(\005\022\023\n\013transportID\030\006 \001(\005B\020\n\016transport_typ"
    "e\"C\n\004Ship\022)\n\ttransport\030\001 \001(\0132\026.com.cps20"
    "04.Transport\022\020\n\010harbours\030\002 \003(\t\"E\n\005Plane\022"
    ")\n\ttransport\030\001 \001(\0132\026.com.cps2004.Transpo"
    "rt\022\021\n\tairSpaces\030\002 \003(\t\"A\n\005Truck\022)\n\ttransp"
    "ort\030\001 \001(\0132\026.com.cps2004.Transport\022\r\n\005roa"
    "ds\030\002 \003(\t\",\n\010Supplier\022\014\n\004name\030\001 \001(\t\022\022\n\nsu"
    "pplierID\030\002 \001(\005\"P\n\007Package\022\026\n\016packagingUn"
    "its\030\001 \001(\005\022\014\n\004cost\030\002 \001(\001\022\014\n\004type\030\003 \001(\t\022\021\n"
    "\tpackageID\030\004 \001(\005\"\216\003\n\007Product\022!\n\004book\030\001 \001"
    "(\0132\021.com.cps2004.BookH\000\022/\n\013electronics\030\002"
    " \001(\0132\030.com.cps2004.ElectronicsH\000\022!\n\004food"
    "\030\003 \001(\0132\021.com.cps2004.FoodH\000\022\'\n\007clothes\030\004"
    " \001(\0132\024.com.cps2004.ClothesH\000\022+\n\tfurnitur"
    "e\030\005 \001(\0132\026.com.cps2004.FurnitureH\000\022+\n\tvid"
    "eoGame\030\006 \001(\0132\026.com.cps2004.VideoGameH\000\022\014"
    "\n\004name\030\007 \001(\t\022\021\n\tproductID\030\010 \001(\005\022\r\n\005price"
    "\030\t \001(\005\022\020\n\010quantity\030\n \001(\005\022\'\n\010supplier\030\013 \001"
    "(\0132\025.com.cps2004.Supplier\022\016\n\006volume\030\014 \001("
    "\005B\016\n\014product_type\"\310\001\n\004Book\022/\n\013fictionBoo"
    "k\030\001 \001(\0132\030.com.cps2004.FictionBookH\000\022)\n\010t"
    "extbook\030\002 \001(\0132\025.com.cps2004.TextbookH\000\022%"
    "\n\007product\030\003 \001(\0132\024.com.cps2004.Product\022\021\n"
    "\tpublisher\030\004 \001(\t\022\r\n\005pages\030\005 \001(\005\022\016\n\006autho"
    "r\030\006 \001(\tB\013\n\tbook_type\"V\n\013FictionBook\022\037\n\004b"
    "ook\030\001 \001(\0132\021.com.cps2004.Book\022\r\n\005genre\030\002 "
    "\001(\t\022\027\n\017publicationDate\030\003 \001(\t\"M\n\010Textbook"
    "\022\037\n\004book\030\001 \001(\0132\021.com.cps2004.Book\022\017\n\007sub"
    "ject\030\002 \001(\t\022\017\n\007edition\030\003 \001(\005\"\276\001\n\013Electron"
    "ics\022%\n\006camera\030\001 \001(\0132\023.com.cps2004.Camera"
    "H\000\022%\n\006laptop\030\002 \001(\0132\023.com.cps2004.LaptopH"
    "\000\022%\n\007product\030\003 \001(\0132\024.com.cps2004.Product"
    "\022\024\n\014manufacturer\030\004 \001(\t\022\020\n\010warranty\030\005 \001(\005"
    "B\022\n\020electronics_type\"w\n\006Camera\022-\n\013electr"
    "onics\030\001 \001(\0132\030.com.cps2004.Electronics\022\022\n"
    "\nmegaPixels\030\002 \001(\001\022\014\n\004zoom\030\003 \001(\005\022\034\n\024wirel"
    "essConnectivity\030\004 \001(\010\"q\n\006Laptop\022-\n\013elect"
    "ronics\030\001 \001(\0132\030.com.cps2004.Electronics\022\022"
    "\n\nscreenSize\030\002 \001(\001\022\027\n\017operatingSystem\030\003 "
    "\001(\t\022\013\n\003ram\030\004 \001(\005\"\272\001\n\004Food\022#\n\005fruit\030\001 \001(\013"
    "2\022.com.cps2004.FruitH\000\0221\n\014premadeLunch\030\002"
    " \001(\0132\031.com.cps2004.PremadeLunchH\000\022%\n\007pro"
    "duct\030\003 \001(\0132\024.com.cps2004.Product\022\016\n\006weig"
    "ht\030\004 \001(\001\022\026\n\016expirationDate\030\005 \001(\tB\013\n\tfood"
    "_type\"`\n\005Fruit\022\037\n\004food\030\001 \001(\0132\021.com.cps20"
    "04.Food\022\027\n\017countryOfOrigin\030\002 \001(\t\022\014\n\004type"
    "\030\003 \001(\t\022\017\n\007organic\030\004 \001(\010\"k\n\014PremadeLunch\022"
    "\037\n\004food\030\001 \001(\0132\021.com.cps2004.Food\022\022\n\nperi"
    "shable\030\002 \001(\010\022\023\n\013ingredients\030\003 \001(\t\022\021\n\tall"
    "ergens\030\004 \001(\t\"\273\001\n\007Clothes\022#\n\005pants\030\001 \001(\0132"
    "\022.com.cps2004.PantsH\000\022%\n\006tShirt\030\002 \001(\0132\023."
    "com.cps2004.TShirtH\000\022%\n\007product\030\003 \001(\0132\024."
    "com.cps2004.Product\022\014\n\004size\030\004 \001(\t\022\r\n\005bra"
    "nd\030\005 \001(\t\022\020\n\010material\030\006 \001(\tB\016\n\014clothes_ty"
    "pe\"M\n\005Pants\022%\n\007clothes\030\001 \001(\0132\024.com.cps20"
    "04.Clothes\022\016\n\006inseam\030\002 \001(\001\022\r\n\005waist\030\003 \001("
    "\001\"Q\n\006TShirt\022%\n\007clothes\030\001 \001(\0132\024.com.cps20"
    "04.Clothes\022\016\n\006collar\030\002 \001(\t\022\020\n\010graphics\030\003"
    " \001(\010\"\264\001\n\tFurniture\022#\n\005table\030\001 \001(\0132\022.com."
    "cps2004.TableH\000\022#\n\005chair\030\002 \001(\0132\022.com.cps"
    "2004.ChairH\000\022%\n\007product\030\003 \001(\0132\024.com.cps2"
    "004.Product\022\020\n\010material\030\004 \001(\t\022\022\n\ndimensi"
    "ons\030\005 \001(\tB\020\n\016furniture_type\"g\n\005Table\022)\n\t"
    "furniture\030\001 \001(\0132\026.com.cps2004.Furniture\022"
    "\022\n\nextendable\030\002 \001(\010\022\r\n\005shape\030\003 \001(\t\022\020\n\010no"
    "OfLegs\030\004 \001(\005\"X\n\005Chair\022)\n\tfurniture\030\001 \001(\013"
    "2\026.com.cps2004.Furniture\022\022\n\nseatLength\030\002"
    " \001(\001\022\020\n\010armRests\030\003 \001(\010\"\261\001\n\tVideoGame\022%\n\006"
    "action\030\001 \001(\0132\023.com.cps2004.ActionH\000\022\037\n\003r"
    "pg\030\002 \001(\0132\020.com.cps2004.RPGH\000\022%\n\007product\030"
    "\003 \001(\0132\024.com.cps2004.Product\022\020\n\010platform\030"
    "\004 \001(\t\022\021\n\tdeveloper\030\005 \001(\tB\020\n\016videoGame_ty"
    "pe\"X\n\006Action\022)\n\tvideoGame\030\001 \001(\0132\026.com.cp"
    "s2004.VideoGame\022\023\n\013noOfPlayers\030\002 \001(\005\022\016\n\006"
    "rating\030\003 \001(\t\"T\n\003RPG\022)\n\tvideoGame\030\001 \001(\0132\026"
    ".com.cps2004.VideoGame\022\r\n\005story\030\002 \001(\t\022\023\n"
    "\013multiplayer\030\003 \001(\010\"D\n\tStockItem\022%\n\007produ"
    "ct\030\001 \001(\0132\024.com.cps2004.Product\022\020\n\010quanti"
    "ty\030\002 \001(\005\"5\n\005Stock\022,\n\014currentstock\030\001 \003(\0132"
    "\026.com.cps2004.StockItem\"z\n\014ShipmentItem\022"
    "\n\n\002id\030\001 \001(\005\022\020\n\010quantity\030\002 \001(\005\022%\n\007product"
    "\030\003 \001(\0132\024.com.cps2004.Product\022%\n\007package\030"
    "\004 \001(\0132\024.com.cps2004.Package\"\271\001\n\010Shipment"
    "\022)\n\ttransport\030\001 \001(\0132\026.com.cps2004.Transp"
    "ort\0220\n\rpackagedItems\030\002 \003(\0132\031.com.cps2004"
    ".ShipmentItem\022\022\n\ndispatched\030\003 \001(\010\022\020\n\010dis"
    "tance\030\004 \001(\001\022\026\n\016dispatchedDate\030\005 \001(\t\022\022\n\ns"
    "hipmentID\030\006 \001(\005\"~\n\010Customer\022\014\n\004name\030\001 \001("
    "\t\022\017\n\007address\030\002 \001(\t\022\n\n\002ID\030\003 \001(\005\022\035\n\025distan"
    "ceFromWarehouse\030\004 \001(\001\022(\n\tshipments\030\005 \003(\013"
    "2\025.com.cps2004.Shipment\"\322\001\n\005State\022*\n\ntra"
    "nsports\030\001 \003(\0132\026.com.cps2004.Transport\022(\n"
    "\tsuppliers\030\002 \003(\0132\025.com.cps2004.Supplier\022"
    "(\n\tcustomers\030\003 \003(\0132\025.com.cps2004.Custome"
    "r\022&\n\010packages\030\004 \003(\0132\024.com.cps2004.Packag"
    "e\022!\n\005stock\030\005 \001(\0132\022.com.cps2004.Stockb\006pr"
    "oto3"
};
static ::absl::once_flag descriptor_table_data_5fstructures_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_data_5fstructures_2eproto = {
    false,
    false,
    4044,
    descriptor_table_protodef_data_5fstructures_2eproto,
    "data_structures.proto",
    &descriptor_table_data_5fstructures_2eproto_once,
    nullptr,
    0,
    31,
    schemas,
    file_default_instances,
    TableStruct_data_5fstructures_2eproto::offsets,
    file_level_metadata_data_5fstructures_2eproto,
    file_level_enum_descriptors_data_5fstructures_2eproto,
    file_level_service_descriptors_data_5fstructures_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_data_5fstructures_2eproto_getter() {
  return &descriptor_table_data_5fstructures_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_data_5fstructures_2eproto(&descriptor_table_data_5fstructures_2eproto);
namespace com {
namespace cps2004 {
// ===================================================================

class Transport::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Transport, _impl_._oneof_case_);
  static const ::com::cps2004::Ship& ship(const Transport* msg);
  static const ::com::cps2004::Plane& plane(const Transport* msg);
  static const ::com::cps2004::Truck& truck(const Transport* msg);
};

const ::com::cps2004::Ship& Transport::_Internal::ship(const Transport* msg) {
  return *msg->_impl_.transport_type_.ship_;
}
const ::com::cps2004::Plane& Transport::_Internal::plane(const Transport* msg) {
  return *msg->_impl_.transport_type_.plane_;
}
const ::com::cps2004::Truck& Transport::_Internal::truck(const Transport* msg) {
  return *msg->_impl_.transport_type_.truck_;
}
void Transport::set_allocated_ship(::com::cps2004::Ship* ship) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_transport_type();
  if (ship) {
    ::google::protobuf::Arena* submessage_arena = ship->GetArena();
    if (message_arena != submessage_arena) {
      ship = ::google::protobuf::internal::GetOwnedMessage(message_arena, ship, submessage_arena);
    }
    set_has_ship();
    _impl_.transport_type_.ship_ = ship;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.Transport.ship)
}
void Transport::set_allocated_plane(::com::cps2004::Plane* plane) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_transport_type();
  if (plane) {
    ::google::protobuf::Arena* submessage_arena = plane->GetArena();
    if (message_arena != submessage_arena) {
      plane = ::google::protobuf::internal::GetOwnedMessage(message_arena, plane, submessage_arena);
    }
    set_has_plane();
    _impl_.transport_type_.plane_ = plane;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.Transport.plane)
}
void Transport::set_allocated_truck(::com::cps2004::Truck* truck) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_transport_type();
  if (truck) {
    ::google::protobuf::Arena* submessage_arena = truck->GetArena();
    if (message_arena != submessage_arena) {
      truck = ::google::protobuf::internal::GetOwnedMessage(message_arena, truck, submessage_arena);
    }
    set_has_truck();
    _impl_.transport_type_.truck_ = truck;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.Transport.truck)
}
Transport::Transport(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Transport)
}
inline PROTOBUF_NDEBUG_INLINE Transport::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : transport_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Transport::Transport(
    ::google::protobuf::Arena* arena,
    const Transport& from)
    : ::google::protobuf::Message(arena) {
  Transport* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, transportspeed_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, transportspeed_),
           offsetof(Impl_, transportid_) -
               offsetof(Impl_, transportspeed_) +
               sizeof(Impl_::transportid_));
  switch (transport_type_case()) {
    case TRANSPORT_TYPE_NOT_SET:
      break;
      case kShip:
        _impl_.transport_type_.ship_ = CreateMaybeMessage<::com::cps2004::Ship>(arena, *from._impl_.transport_type_.ship_);
        break;
      case kPlane:
        _impl_.transport_type_.plane_ = CreateMaybeMessage<::com::cps2004::Plane>(arena, *from._impl_.transport_type_.plane_);
        break;
      case kTruck:
        _impl_.transport_type_.truck_ = CreateMaybeMessage<::com::cps2004::Truck>(arena, *from._impl_.transport_type_.truck_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Transport)
}
inline PROTOBUF_NDEBUG_INLINE Transport::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : transport_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Transport::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, transportspeed_),
           0,
           offsetof(Impl_, transportid_) -
               offsetof(Impl_, transportspeed_) +
               sizeof(Impl_::transportid_));
}
Transport::~Transport() {
  // @@protoc_insertion_point(destructor:com.cps2004.Transport)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Transport::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_transport_type()) {
    clear_transport_type();
  }
  _impl_.~Impl_();
}

void Transport::clear_transport_type() {
// @@protoc_insertion_point(one_of_clear_start:com.cps2004.Transport)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (transport_type_case()) {
    case kShip: {
      if (GetArena() == nullptr) {
        delete _impl_.transport_type_.ship_;
      }
      break;
    }
    case kPlane: {
      if (GetArena() == nullptr) {
        delete _impl_.transport_type_.plane_;
      }
      break;
    }
    case kTruck: {
      if (GetArena() == nullptr) {
        delete _impl_.transport_type_.truck_;
      }
      break;
    }
    case TRANSPORT_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TRANSPORT_TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void Transport::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Transport)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.transportspeed_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.transportid_) -
      reinterpret_cast<char*>(&_impl_.transportspeed_)) + sizeof(_impl_.transportid_));
  clear_transport_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Transport::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 3, 0, 2> Transport::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Transport_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 transportSpeed = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Transport, _impl_.transportspeed_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Transport, _impl_.transportspeed_)}},
    // int32 costPerKm = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Transport, _impl_.costperkm_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Transport, _impl_.costperkm_)}},
    // int32 transportID = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Transport, _impl_.transportid_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Transport, _impl_.transportid_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Ship ship = 1;
    {PROTOBUF_FIELD_OFFSET(Transport, _impl_.transport_type_.ship_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.Plane plane = 2;
    {PROTOBUF_FIELD_OFFSET(Transport, _impl_.transport_type_.plane_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.Truck truck = 3;
    {PROTOBUF_FIELD_OFFSET(Transport, _impl_.transport_type_.truck_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 transportSpeed = 4;
    {PROTOBUF_FIELD_OFFSET(Transport, _impl_.transportspeed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 costPerKm = 5;
    {PROTOBUF_FIELD_OFFSET(Transport, _impl_.costperkm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 transportID = 6;
    {PROTOBUF_FIELD_OFFSET(Transport, _impl_.transportid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Ship>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Plane>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Truck>()},
  }}, {{
  }},
};

::uint8_t* Transport::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Transport)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (transport_type_case()) {
    case kShip: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::ship(this),
          _Internal::ship(this).GetCachedSize(), target, stream);
      break;
    }
    case kPlane: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::plane(this),
          _Internal::plane(this).GetCachedSize(), target, stream);
      break;
    }
    case kTruck: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::truck(this),
          _Internal::truck(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  // int32 transportSpeed = 4;
  if (this->_internal_transportspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_transportspeed(), target);
  }

  // int32 costPerKm = 5;
  if (this->_internal_costperkm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_costperkm(), target);
  }

  // int32 transportID = 6;
  if (this->_internal_transportid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_transportid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Transport)
  return target;
}

::size_t Transport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Transport)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 transportSpeed = 4;
  if (this->_internal_transportspeed() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_transportspeed());
  }

  // int32 costPerKm = 5;
  if (this->_internal_costperkm() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_costperkm());
  }

  // int32 transportID = 6;
  if (this->_internal_transportid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_transportid());
  }

  switch (transport_type_case()) {
    // .com.cps2004.Ship ship = 1;
    case kShip: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.transport_type_.ship_);
      break;
    }
    // .com.cps2004.Plane plane = 2;
    case kPlane: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.transport_type_.plane_);
      break;
    }
    // .com.cps2004.Truck truck = 3;
    case kTruck: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.transport_type_.truck_);
      break;
    }
    case TRANSPORT_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Transport::_class_data_ = {
    Transport::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Transport::GetClassData() const {
  return &_class_data_;
}

void Transport::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Transport*>(&to_msg);
  auto& from = static_cast<const Transport&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Transport)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_transportspeed() != 0) {
    _this->_internal_set_transportspeed(from._internal_transportspeed());
  }
  if (from._internal_costperkm() != 0) {
    _this->_internal_set_costperkm(from._internal_costperkm());
  }
  if (from._internal_transportid() != 0) {
    _this->_internal_set_transportid(from._internal_transportid());
  }
  switch (from.transport_type_case()) {
    case kShip: {
      _this->_internal_mutable_ship()->::com::cps2004::Ship::MergeFrom(
          from._internal_ship());
      break;
    }
    case kPlane: {
      _this->_internal_mutable_plane()->::com::cps2004::Plane::MergeFrom(
          from._internal_plane());
      break;
    }
    case kTruck: {
      _this->_internal_mutable_truck()->::com::cps2004::Truck::MergeFrom(
          from._internal_truck());
      break;
    }
    case TRANSPORT_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Transport::CopyFrom(const Transport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Transport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Transport::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Transport::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Transport::InternalSwap(Transport* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Transport, _impl_.transportid_)
      + sizeof(Transport::_impl_.transportid_)
      - PROTOBUF_FIELD_OFFSET(Transport, _impl_.transportspeed_)>(
          reinterpret_cast<char*>(&_impl_.transportspeed_),
          reinterpret_cast<char*>(&other->_impl_.transportspeed_));
  swap(_impl_.transport_type_, other->_impl_.transport_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Transport::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[0]);
}
// ===================================================================

class Ship::_Internal {
 public:
  using HasBits = decltype(std::declval<Ship>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Ship, _impl_._has_bits_);
  static const ::com::cps2004::Transport& transport(const Ship* msg);
  static void set_has_transport(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Transport& Ship::_Internal::transport(const Ship* msg) {
  return *msg->_impl_.transport_;
}
Ship::Ship(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Ship)
}
inline PROTOBUF_NDEBUG_INLINE Ship::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        harbours_{visibility, arena, from.harbours_} {}

Ship::Ship(
    ::google::protobuf::Arena* arena,
    const Ship& from)
    : ::google::protobuf::Message(arena) {
  Ship* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.transport_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Transport>(arena, *from._impl_.transport_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Ship)
}
inline PROTOBUF_NDEBUG_INLINE Ship::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        harbours_{visibility, arena} {}

inline void Ship::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.transport_ = {};
}
Ship::~Ship() {
  // @@protoc_insertion_point(destructor:com.cps2004.Ship)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Ship::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.transport_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Ship::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Ship)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.harbours_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.transport_ != nullptr);
    _impl_.transport_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Ship::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 33, 2> Ship::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Ship, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Ship_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string harbours = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Ship, _impl_.harbours_)}},
    // .com.cps2004.Transport transport = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Ship, _impl_.transport_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Transport transport = 1;
    {PROTOBUF_FIELD_OFFSET(Ship, _impl_.transport_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string harbours = 2;
    {PROTOBUF_FIELD_OFFSET(Ship, _impl_.harbours_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Transport>()},
  }}, {{
    "\20\0\10\0\0\0\0\0"
    "com.cps2004.Ship"
    "harbours"
  }},
};

::uint8_t* Ship::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Ship)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Transport transport = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::transport(this),
        _Internal::transport(this).GetCachedSize(), target, stream);
  }

  // repeated string harbours = 2;
  for (int i = 0, n = this->_internal_harbours_size(); i < n; ++i) {
    const auto& s = this->_internal_harbours().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Ship.harbours");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Ship)
  return target;
}

::size_t Ship::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Ship)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string harbours = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_harbours().size());
  for (int i = 0, n = _internal_harbours().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_harbours().Get(i));
  }
  // .com.cps2004.Transport transport = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.transport_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Ship::_class_data_ = {
    Ship::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Ship::GetClassData() const {
  return &_class_data_;
}

void Ship::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Ship*>(&to_msg);
  auto& from = static_cast<const Ship&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Ship)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_harbours()->MergeFrom(from._internal_harbours());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_transport()->::com::cps2004::Transport::MergeFrom(
        from._internal_transport());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Ship::CopyFrom(const Ship& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Ship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Ship::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Ship::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Ship::InternalSwap(Ship* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.harbours_.InternalSwap(&other->_impl_.harbours_);
  swap(_impl_.transport_, other->_impl_.transport_);
}

::google::protobuf::Metadata Ship::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[1]);
}
// ===================================================================

class Plane::_Internal {
 public:
  using HasBits = decltype(std::declval<Plane>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Plane, _impl_._has_bits_);
  static const ::com::cps2004::Transport& transport(const Plane* msg);
  static void set_has_transport(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Transport& Plane::_Internal::transport(const Plane* msg) {
  return *msg->_impl_.transport_;
}
Plane::Plane(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Plane)
}
inline PROTOBUF_NDEBUG_INLINE Plane::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        airspaces_{visibility, arena, from.airspaces_} {}

Plane::Plane(
    ::google::protobuf::Arena* arena,
    const Plane& from)
    : ::google::protobuf::Message(arena) {
  Plane* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.transport_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Transport>(arena, *from._impl_.transport_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Plane)
}
inline PROTOBUF_NDEBUG_INLINE Plane::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        airspaces_{visibility, arena} {}

inline void Plane::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.transport_ = {};
}
Plane::~Plane() {
  // @@protoc_insertion_point(destructor:com.cps2004.Plane)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Plane::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.transport_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Plane::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Plane)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.airspaces_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.transport_ != nullptr);
    _impl_.transport_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Plane::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 35, 2> Plane::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Plane, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Plane_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string airSpaces = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Plane, _impl_.airspaces_)}},
    // .com.cps2004.Transport transport = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Plane, _impl_.transport_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Transport transport = 1;
    {PROTOBUF_FIELD_OFFSET(Plane, _impl_.transport_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string airSpaces = 2;
    {PROTOBUF_FIELD_OFFSET(Plane, _impl_.airspaces_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Transport>()},
  }}, {{
    "\21\0\11\0\0\0\0\0"
    "com.cps2004.Plane"
    "airSpaces"
  }},
};

::uint8_t* Plane::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Plane)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Transport transport = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::transport(this),
        _Internal::transport(this).GetCachedSize(), target, stream);
  }

  // repeated string airSpaces = 2;
  for (int i = 0, n = this->_internal_airspaces_size(); i < n; ++i) {
    const auto& s = this->_internal_airspaces().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Plane.airSpaces");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Plane)
  return target;
}

::size_t Plane::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Plane)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string airSpaces = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_airspaces().size());
  for (int i = 0, n = _internal_airspaces().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_airspaces().Get(i));
  }
  // .com.cps2004.Transport transport = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.transport_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Plane::_class_data_ = {
    Plane::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Plane::GetClassData() const {
  return &_class_data_;
}

void Plane::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Plane*>(&to_msg);
  auto& from = static_cast<const Plane&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Plane)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_airspaces()->MergeFrom(from._internal_airspaces());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_transport()->::com::cps2004::Transport::MergeFrom(
        from._internal_transport());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Plane::CopyFrom(const Plane& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Plane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Plane::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Plane::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Plane::InternalSwap(Plane* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.airspaces_.InternalSwap(&other->_impl_.airspaces_);
  swap(_impl_.transport_, other->_impl_.transport_);
}

::google::protobuf::Metadata Plane::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[2]);
}
// ===================================================================

class Truck::_Internal {
 public:
  using HasBits = decltype(std::declval<Truck>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Truck, _impl_._has_bits_);
  static const ::com::cps2004::Transport& transport(const Truck* msg);
  static void set_has_transport(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Transport& Truck::_Internal::transport(const Truck* msg) {
  return *msg->_impl_.transport_;
}
Truck::Truck(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Truck)
}
inline PROTOBUF_NDEBUG_INLINE Truck::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        roads_{visibility, arena, from.roads_} {}

Truck::Truck(
    ::google::protobuf::Arena* arena,
    const Truck& from)
    : ::google::protobuf::Message(arena) {
  Truck* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.transport_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Transport>(arena, *from._impl_.transport_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Truck)
}
inline PROTOBUF_NDEBUG_INLINE Truck::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        roads_{visibility, arena} {}

inline void Truck::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.transport_ = {};
}
Truck::~Truck() {
  // @@protoc_insertion_point(destructor:com.cps2004.Truck)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Truck::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.transport_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Truck::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Truck)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.roads_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.transport_ != nullptr);
    _impl_.transport_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Truck::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 31, 2> Truck::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Truck, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Truck_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string roads = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Truck, _impl_.roads_)}},
    // .com.cps2004.Transport transport = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Truck, _impl_.transport_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Transport transport = 1;
    {PROTOBUF_FIELD_OFFSET(Truck, _impl_.transport_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string roads = 2;
    {PROTOBUF_FIELD_OFFSET(Truck, _impl_.roads_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Transport>()},
  }}, {{
    "\21\0\5\0\0\0\0\0"
    "com.cps2004.Truck"
    "roads"
  }},
};

::uint8_t* Truck::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Truck)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Transport transport = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::transport(this),
        _Internal::transport(this).GetCachedSize(), target, stream);
  }

  // repeated string roads = 2;
  for (int i = 0, n = this->_internal_roads_size(); i < n; ++i) {
    const auto& s = this->_internal_roads().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Truck.roads");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Truck)
  return target;
}

::size_t Truck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Truck)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string roads = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_roads().size());
  for (int i = 0, n = _internal_roads().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_roads().Get(i));
  }
  // .com.cps2004.Transport transport = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.transport_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Truck::_class_data_ = {
    Truck::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Truck::GetClassData() const {
  return &_class_data_;
}

void Truck::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Truck*>(&to_msg);
  auto& from = static_cast<const Truck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Truck)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_roads()->MergeFrom(from._internal_roads());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_transport()->::com::cps2004::Transport::MergeFrom(
        from._internal_transport());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Truck::CopyFrom(const Truck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Truck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Truck::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Truck::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Truck::InternalSwap(Truck* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.roads_.InternalSwap(&other->_impl_.roads_);
  swap(_impl_.transport_, other->_impl_.transport_);
}

::google::protobuf::Metadata Truck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[3]);
}
// ===================================================================

class Supplier::_Internal {
 public:
};

Supplier::Supplier(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Supplier)
}
inline PROTOBUF_NDEBUG_INLINE Supplier::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

Supplier::Supplier(
    ::google::protobuf::Arena* arena,
    const Supplier& from)
    : ::google::protobuf::Message(arena) {
  Supplier* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.supplierid_ = from._impl_.supplierid_;

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Supplier)
}
inline PROTOBUF_NDEBUG_INLINE Supplier::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void Supplier::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.supplierid_ = {};
}
Supplier::~Supplier() {
  // @@protoc_insertion_point(destructor:com.cps2004.Supplier)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Supplier::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Supplier::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Supplier)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.supplierid_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Supplier::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 33, 2> Supplier::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Supplier_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 supplierID = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Supplier, _impl_.supplierid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Supplier, _impl_.supplierid_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Supplier, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Supplier, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 supplierID = 2;
    {PROTOBUF_FIELD_OFFSET(Supplier, _impl_.supplierid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\24\4\0\0\0\0\0\0"
    "com.cps2004.Supplier"
    "name"
  }},
};

::uint8_t* Supplier::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Supplier)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Supplier.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 supplierID = 2;
  if (this->_internal_supplierid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_supplierid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Supplier)
  return target;
}

::size_t Supplier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Supplier)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // int32 supplierID = 2;
  if (this->_internal_supplierid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_supplierid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Supplier::_class_data_ = {
    Supplier::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Supplier::GetClassData() const {
  return &_class_data_;
}

void Supplier::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Supplier*>(&to_msg);
  auto& from = static_cast<const Supplier&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Supplier)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_supplierid() != 0) {
    _this->_internal_set_supplierid(from._internal_supplierid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Supplier::CopyFrom(const Supplier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Supplier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Supplier::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Supplier::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Supplier::InternalSwap(Supplier* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
        swap(_impl_.supplierid_, other->_impl_.supplierid_);
}

::google::protobuf::Metadata Supplier::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[4]);
}
// ===================================================================

class Package::_Internal {
 public:
};

Package::Package(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Package)
}
inline PROTOBUF_NDEBUG_INLINE Package::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : type_(arena, from.type_),
        _cached_size_{0} {}

Package::Package(
    ::google::protobuf::Arena* arena,
    const Package& from)
    : ::google::protobuf::Message(arena) {
  Package* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cost_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, cost_),
           offsetof(Impl_, packageid_) -
               offsetof(Impl_, cost_) +
               sizeof(Impl_::packageid_));

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Package)
}
inline PROTOBUF_NDEBUG_INLINE Package::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : type_(arena),
        _cached_size_{0} {}

inline void Package::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cost_),
           0,
           offsetof(Impl_, packageid_) -
               offsetof(Impl_, cost_) +
               sizeof(Impl_::packageid_));
}
Package::~Package() {
  // @@protoc_insertion_point(destructor:com.cps2004.Package)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Package::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.type_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Package::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Package)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_.ClearToEmpty();
  ::memset(&_impl_.cost_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.packageid_) -
      reinterpret_cast<char*>(&_impl_.cost_)) + sizeof(_impl_.packageid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Package::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 32, 2> Package::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Package_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 packageID = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Package, _impl_.packageid_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Package, _impl_.packageid_)}},
    // int32 packagingUnits = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Package, _impl_.packagingunits_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Package, _impl_.packagingunits_)}},
    // double cost = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Package, _impl_.cost_)}},
    // string type = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Package, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 packagingUnits = 1;
    {PROTOBUF_FIELD_OFFSET(Package, _impl_.packagingunits_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // double cost = 2;
    {PROTOBUF_FIELD_OFFSET(Package, _impl_.cost_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string type = 3;
    {PROTOBUF_FIELD_OFFSET(Package, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 packageID = 4;
    {PROTOBUF_FIELD_OFFSET(Package, _impl_.packageid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\23\0\0\4\0\0\0\0"
    "com.cps2004.Package"
    "type"
  }},
};

::uint8_t* Package::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Package)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 packagingUnits = 1;
  if (this->_internal_packagingunits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_packagingunits(), target);
  }

  // double cost = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_cost = this->_internal_cost();
  ::uint64_t raw_cost;
  memcpy(&raw_cost, &tmp_cost, sizeof(tmp_cost));
  if (raw_cost != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_cost(), target);
  }

  // string type = 3;
  if (!this->_internal_type().empty()) {
    const std::string& _s = this->_internal_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Package.type");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // int32 packageID = 4;
  if (this->_internal_packageid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_packageid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Package)
  return target;
}

::size_t Package::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Package)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string type = 3;
  if (!this->_internal_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type());
  }

  // double cost = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_cost = this->_internal_cost();
  ::uint64_t raw_cost;
  memcpy(&raw_cost, &tmp_cost, sizeof(tmp_cost));
  if (raw_cost != 0) {
    total_size += 9;
  }

  // int32 packagingUnits = 1;
  if (this->_internal_packagingunits() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_packagingunits());
  }

  // int32 packageID = 4;
  if (this->_internal_packageid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_packageid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Package::_class_data_ = {
    Package::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Package::GetClassData() const {
  return &_class_data_;
}

void Package::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Package*>(&to_msg);
  auto& from = static_cast<const Package&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Package)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_cost = from._internal_cost();
  ::uint64_t raw_cost;
  memcpy(&raw_cost, &tmp_cost, sizeof(tmp_cost));
  if (raw_cost != 0) {
    _this->_internal_set_cost(from._internal_cost());
  }
  if (from._internal_packagingunits() != 0) {
    _this->_internal_set_packagingunits(from._internal_packagingunits());
  }
  if (from._internal_packageid() != 0) {
    _this->_internal_set_packageid(from._internal_packageid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Package::CopyFrom(const Package& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Package)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Package::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Package::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Package::InternalSwap(Package* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Package, _impl_.packageid_)
      + sizeof(Package::_impl_.packageid_)
      - PROTOBUF_FIELD_OFFSET(Package, _impl_.cost_)>(
          reinterpret_cast<char*>(&_impl_.cost_),
          reinterpret_cast<char*>(&other->_impl_.cost_));
}

::google::protobuf::Metadata Package::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[5]);
}
// ===================================================================

class Product::_Internal {
 public:
  using HasBits = decltype(std::declval<Product>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Product, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Product, _impl_._oneof_case_);
  static const ::com::cps2004::Book& book(const Product* msg);
  static const ::com::cps2004::Electronics& electronics(const Product* msg);
  static const ::com::cps2004::Food& food(const Product* msg);
  static const ::com::cps2004::Clothes& clothes(const Product* msg);
  static const ::com::cps2004::Furniture& furniture(const Product* msg);
  static const ::com::cps2004::VideoGame& videogame(const Product* msg);
  static const ::com::cps2004::Supplier& supplier(const Product* msg);
  static void set_has_supplier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Book& Product::_Internal::book(const Product* msg) {
  return *msg->_impl_.product_type_.book_;
}
const ::com::cps2004::Electronics& Product::_Internal::electronics(const Product* msg) {
  return *msg->_impl_.product_type_.electronics_;
}
const ::com::cps2004::Food& Product::_Internal::food(const Product* msg) {
  return *msg->_impl_.product_type_.food_;
}
const ::com::cps2004::Clothes& Product::_Internal::clothes(const Product* msg) {
  return *msg->_impl_.product_type_.clothes_;
}
const ::com::cps2004::Furniture& Product::_Internal::furniture(const Product* msg) {
  return *msg->_impl_.product_type_.furniture_;
}
const ::com::cps2004::VideoGame& Product::_Internal::videogame(const Product* msg) {
  return *msg->_impl_.product_type_.videogame_;
}
const ::com::cps2004::Supplier& Product::_Internal::supplier(const Product* msg) {
  return *msg->_impl_.supplier_;
}
void Product::set_allocated_book(::com::cps2004::Book* book) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_product_type();
  if (book) {
    ::google::protobuf::Arena* submessage_arena = book->GetArena();
    if (message_arena != submessage_arena) {
      book = ::google::protobuf::internal::GetOwnedMessage(message_arena, book, submessage_arena);
    }
    set_has_book();
    _impl_.product_type_.book_ = book;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.Product.book)
}
void Product::set_allocated_electronics(::com::cps2004::Electronics* electronics) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_product_type();
  if (electronics) {
    ::google::protobuf::Arena* submessage_arena = electronics->GetArena();
    if (message_arena != submessage_arena) {
      electronics = ::google::protobuf::internal::GetOwnedMessage(message_arena, electronics, submessage_arena);
    }
    set_has_electronics();
    _impl_.product_type_.electronics_ = electronics;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.Product.electronics)
}
void Product::set_allocated_food(::com::cps2004::Food* food) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_product_type();
  if (food) {
    ::google::protobuf::Arena* submessage_arena = food->GetArena();
    if (message_arena != submessage_arena) {
      food = ::google::protobuf::internal::GetOwnedMessage(message_arena, food, submessage_arena);
    }
    set_has_food();
    _impl_.product_type_.food_ = food;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.Product.food)
}
void Product::set_allocated_clothes(::com::cps2004::Clothes* clothes) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_product_type();
  if (clothes) {
    ::google::protobuf::Arena* submessage_arena = clothes->GetArena();
    if (message_arena != submessage_arena) {
      clothes = ::google::protobuf::internal::GetOwnedMessage(message_arena, clothes, submessage_arena);
    }
    set_has_clothes();
    _impl_.product_type_.clothes_ = clothes;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.Product.clothes)
}
void Product::set_allocated_furniture(::com::cps2004::Furniture* furniture) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_product_type();
  if (furniture) {
    ::google::protobuf::Arena* submessage_arena = furniture->GetArena();
    if (message_arena != submessage_arena) {
      furniture = ::google::protobuf::internal::GetOwnedMessage(message_arena, furniture, submessage_arena);
    }
    set_has_furniture();
    _impl_.product_type_.furniture_ = furniture;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.Product.furniture)
}
void Product::set_allocated_videogame(::com::cps2004::VideoGame* videogame) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_product_type();
  if (videogame) {
    ::google::protobuf::Arena* submessage_arena = videogame->GetArena();
    if (message_arena != submessage_arena) {
      videogame = ::google::protobuf::internal::GetOwnedMessage(message_arena, videogame, submessage_arena);
    }
    set_has_videogame();
    _impl_.product_type_.videogame_ = videogame;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.Product.videoGame)
}
Product::Product(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Product)
}
inline PROTOBUF_NDEBUG_INLINE Product::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        product_type_{},
        _oneof_case_{from._oneof_case_[0]} {}

Product::Product(
    ::google::protobuf::Arena* arena,
    const Product& from)
    : ::google::protobuf::Message(arena) {
  Product* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.supplier_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Supplier>(arena, *from._impl_.supplier_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, productid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, productid_),
           offsetof(Impl_, volume_) -
               offsetof(Impl_, productid_) +
               sizeof(Impl_::volume_));
  switch (product_type_case()) {
    case PRODUCT_TYPE_NOT_SET:
      break;
      case kBook:
        _impl_.product_type_.book_ = CreateMaybeMessage<::com::cps2004::Book>(arena, *from._impl_.product_type_.book_);
        break;
      case kElectronics:
        _impl_.product_type_.electronics_ = CreateMaybeMessage<::com::cps2004::Electronics>(arena, *from._impl_.product_type_.electronics_);
        break;
      case kFood:
        _impl_.product_type_.food_ = CreateMaybeMessage<::com::cps2004::Food>(arena, *from._impl_.product_type_.food_);
        break;
      case kClothes:
        _impl_.product_type_.clothes_ = CreateMaybeMessage<::com::cps2004::Clothes>(arena, *from._impl_.product_type_.clothes_);
        break;
      case kFurniture:
        _impl_.product_type_.furniture_ = CreateMaybeMessage<::com::cps2004::Furniture>(arena, *from._impl_.product_type_.furniture_);
        break;
      case kVideoGame:
        _impl_.product_type_.videogame_ = CreateMaybeMessage<::com::cps2004::VideoGame>(arena, *from._impl_.product_type_.videogame_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Product)
}
inline PROTOBUF_NDEBUG_INLINE Product::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena),
        product_type_{},
        _oneof_case_{} {}

inline void Product::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, supplier_),
           0,
           offsetof(Impl_, volume_) -
               offsetof(Impl_, supplier_) +
               sizeof(Impl_::volume_));
}
Product::~Product() {
  // @@protoc_insertion_point(destructor:com.cps2004.Product)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Product::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  delete _impl_.supplier_;
  if (has_product_type()) {
    clear_product_type();
  }
  _impl_.~Impl_();
}

void Product::clear_product_type() {
// @@protoc_insertion_point(one_of_clear_start:com.cps2004.Product)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (product_type_case()) {
    case kBook: {
      if (GetArena() == nullptr) {
        delete _impl_.product_type_.book_;
      }
      break;
    }
    case kElectronics: {
      if (GetArena() == nullptr) {
        delete _impl_.product_type_.electronics_;
      }
      break;
    }
    case kFood: {
      if (GetArena() == nullptr) {
        delete _impl_.product_type_.food_;
      }
      break;
    }
    case kClothes: {
      if (GetArena() == nullptr) {
        delete _impl_.product_type_.clothes_;
      }
      break;
    }
    case kFurniture: {
      if (GetArena() == nullptr) {
        delete _impl_.product_type_.furniture_;
      }
      break;
    }
    case kVideoGame: {
      if (GetArena() == nullptr) {
        delete _impl_.product_type_.videogame_;
      }
      break;
    }
    case PRODUCT_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PRODUCT_TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void Product::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Product)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.supplier_ != nullptr);
    _impl_.supplier_->Clear();
  }
  ::memset(&_impl_.productid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.volume_) -
      reinterpret_cast<char*>(&_impl_.productid_)) + sizeof(_impl_.volume_));
  clear_product_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Product::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 12, 7, 40, 2> Product::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Product, _impl_._has_bits_),
    0, // no _extensions_
    12, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Product_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 productID = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Product, _impl_.productid_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Product, _impl_.productid_)}},
    // int32 price = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Product, _impl_.price_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(Product, _impl_.price_)}},
    // int32 quantity = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Product, _impl_.quantity_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(Product, _impl_.quantity_)}},
    // .com.cps2004.Supplier supplier = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 0, 6, PROTOBUF_FIELD_OFFSET(Product, _impl_.supplier_)}},
    // int32 volume = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Product, _impl_.volume_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(Product, _impl_.volume_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Product, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Book book = 1;
    {PROTOBUF_FIELD_OFFSET(Product, _impl_.product_type_.book_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.Electronics electronics = 2;
    {PROTOBUF_FIELD_OFFSET(Product, _impl_.product_type_.electronics_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.Food food = 3;
    {PROTOBUF_FIELD_OFFSET(Product, _impl_.product_type_.food_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.Clothes clothes = 4;
    {PROTOBUF_FIELD_OFFSET(Product, _impl_.product_type_.clothes_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.Furniture furniture = 5;
    {PROTOBUF_FIELD_OFFSET(Product, _impl_.product_type_.furniture_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.VideoGame videoGame = 6;
    {PROTOBUF_FIELD_OFFSET(Product, _impl_.product_type_.videogame_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string name = 7;
    {PROTOBUF_FIELD_OFFSET(Product, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 productID = 8;
    {PROTOBUF_FIELD_OFFSET(Product, _impl_.productid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 price = 9;
    {PROTOBUF_FIELD_OFFSET(Product, _impl_.price_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 quantity = 10;
    {PROTOBUF_FIELD_OFFSET(Product, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .com.cps2004.Supplier supplier = 11;
    {PROTOBUF_FIELD_OFFSET(Product, _impl_.supplier_), _Internal::kHasBitsOffset + 0, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 volume = 12;
    {PROTOBUF_FIELD_OFFSET(Product, _impl_.volume_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Book>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Electronics>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Food>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Clothes>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Furniture>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::VideoGame>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Supplier>()},
  }}, {{
    "\23\0\0\0\0\0\0\4\0\0\0\0\0\0\0\0"
    "com.cps2004.Product"
    "name"
  }},
};

::uint8_t* Product::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Product)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (product_type_case()) {
    case kBook: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::book(this),
          _Internal::book(this).GetCachedSize(), target, stream);
      break;
    }
    case kElectronics: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::electronics(this),
          _Internal::electronics(this).GetCachedSize(), target, stream);
      break;
    }
    case kFood: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::food(this),
          _Internal::food(this).GetCachedSize(), target, stream);
      break;
    }
    case kClothes: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::clothes(this),
          _Internal::clothes(this).GetCachedSize(), target, stream);
      break;
    }
    case kFurniture: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::furniture(this),
          _Internal::furniture(this).GetCachedSize(), target, stream);
      break;
    }
    case kVideoGame: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, _Internal::videogame(this),
          _Internal::videogame(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  // string name = 7;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Product.name");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // int32 productID = 8;
  if (this->_internal_productid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_productid(), target);
  }

  // int32 price = 9;
  if (this->_internal_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_price(), target);
  }

  // int32 quantity = 10;
  if (this->_internal_quantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<10>(
            stream, this->_internal_quantity(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Supplier supplier = 11;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, _Internal::supplier(this),
        _Internal::supplier(this).GetCachedSize(), target, stream);
  }

  // int32 volume = 12;
  if (this->_internal_volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<12>(
            stream, this->_internal_volume(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Product)
  return target;
}

::size_t Product::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Product)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 7;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // .com.cps2004.Supplier supplier = 11;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.supplier_);
  }

  // int32 productID = 8;
  if (this->_internal_productid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_productid());
  }

  // int32 price = 9;
  if (this->_internal_price() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_price());
  }

  // int32 quantity = 10;
  if (this->_internal_quantity() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_quantity());
  }

  // int32 volume = 12;
  if (this->_internal_volume() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_volume());
  }

  switch (product_type_case()) {
    // .com.cps2004.Book book = 1;
    case kBook: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.product_type_.book_);
      break;
    }
    // .com.cps2004.Electronics electronics = 2;
    case kElectronics: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.product_type_.electronics_);
      break;
    }
    // .com.cps2004.Food food = 3;
    case kFood: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.product_type_.food_);
      break;
    }
    // .com.cps2004.Clothes clothes = 4;
    case kClothes: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.product_type_.clothes_);
      break;
    }
    // .com.cps2004.Furniture furniture = 5;
    case kFurniture: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.product_type_.furniture_);
      break;
    }
    // .com.cps2004.VideoGame videoGame = 6;
    case kVideoGame: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.product_type_.videogame_);
      break;
    }
    case PRODUCT_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Product::_class_data_ = {
    Product::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Product::GetClassData() const {
  return &_class_data_;
}

void Product::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Product*>(&to_msg);
  auto& from = static_cast<const Product&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Product)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_supplier()->::com::cps2004::Supplier::MergeFrom(
        from._internal_supplier());
  }
  if (from._internal_productid() != 0) {
    _this->_internal_set_productid(from._internal_productid());
  }
  if (from._internal_price() != 0) {
    _this->_internal_set_price(from._internal_price());
  }
  if (from._internal_quantity() != 0) {
    _this->_internal_set_quantity(from._internal_quantity());
  }
  if (from._internal_volume() != 0) {
    _this->_internal_set_volume(from._internal_volume());
  }
  switch (from.product_type_case()) {
    case kBook: {
      _this->_internal_mutable_book()->::com::cps2004::Book::MergeFrom(
          from._internal_book());
      break;
    }
    case kElectronics: {
      _this->_internal_mutable_electronics()->::com::cps2004::Electronics::MergeFrom(
          from._internal_electronics());
      break;
    }
    case kFood: {
      _this->_internal_mutable_food()->::com::cps2004::Food::MergeFrom(
          from._internal_food());
      break;
    }
    case kClothes: {
      _this->_internal_mutable_clothes()->::com::cps2004::Clothes::MergeFrom(
          from._internal_clothes());
      break;
    }
    case kFurniture: {
      _this->_internal_mutable_furniture()->::com::cps2004::Furniture::MergeFrom(
          from._internal_furniture());
      break;
    }
    case kVideoGame: {
      _this->_internal_mutable_videogame()->::com::cps2004::VideoGame::MergeFrom(
          from._internal_videogame());
      break;
    }
    case PRODUCT_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Product::CopyFrom(const Product& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Product::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Product::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Product::InternalSwap(Product* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Product, _impl_.volume_)
      + sizeof(Product::_impl_.volume_)
      - PROTOBUF_FIELD_OFFSET(Product, _impl_.supplier_)>(
          reinterpret_cast<char*>(&_impl_.supplier_),
          reinterpret_cast<char*>(&other->_impl_.supplier_));
  swap(_impl_.product_type_, other->_impl_.product_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Product::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[6]);
}
// ===================================================================

class Book::_Internal {
 public:
  using HasBits = decltype(std::declval<Book>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Book, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Book, _impl_._oneof_case_);
  static const ::com::cps2004::FictionBook& fictionbook(const Book* msg);
  static const ::com::cps2004::Textbook& textbook(const Book* msg);
  static const ::com::cps2004::Product& product(const Book* msg);
  static void set_has_product(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::FictionBook& Book::_Internal::fictionbook(const Book* msg) {
  return *msg->_impl_.book_type_.fictionbook_;
}
const ::com::cps2004::Textbook& Book::_Internal::textbook(const Book* msg) {
  return *msg->_impl_.book_type_.textbook_;
}
const ::com::cps2004::Product& Book::_Internal::product(const Book* msg) {
  return *msg->_impl_.product_;
}
void Book::set_allocated_fictionbook(::com::cps2004::FictionBook* fictionbook) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_book_type();
  if (fictionbook) {
    ::google::protobuf::Arena* submessage_arena = fictionbook->GetArena();
    if (message_arena != submessage_arena) {
      fictionbook = ::google::protobuf::internal::GetOwnedMessage(message_arena, fictionbook, submessage_arena);
    }
    set_has_fictionbook();
    _impl_.book_type_.fictionbook_ = fictionbook;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.Book.fictionBook)
}
void Book::set_allocated_textbook(::com::cps2004::Textbook* textbook) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_book_type();
  if (textbook) {
    ::google::protobuf::Arena* submessage_arena = textbook->GetArena();
    if (message_arena != submessage_arena) {
      textbook = ::google::protobuf::internal::GetOwnedMessage(message_arena, textbook, submessage_arena);
    }
    set_has_textbook();
    _impl_.book_type_.textbook_ = textbook;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.Book.textbook)
}
Book::Book(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Book)
}
inline PROTOBUF_NDEBUG_INLINE Book::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        publisher_(arena, from.publisher_),
        author_(arena, from.author_),
        book_type_{},
        _oneof_case_{from._oneof_case_[0]} {}

Book::Book(
    ::google::protobuf::Arena* arena,
    const Book& from)
    : ::google::protobuf::Message(arena) {
  Book* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.product_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Product>(arena, *from._impl_.product_)
                : nullptr;
  _impl_.pages_ = from._impl_.pages_;
  switch (book_type_case()) {
    case BOOK_TYPE_NOT_SET:
      break;
      case kFictionBook:
        _impl_.book_type_.fictionbook_ = CreateMaybeMessage<::com::cps2004::FictionBook>(arena, *from._impl_.book_type_.fictionbook_);
        break;
      case kTextbook:
        _impl_.book_type_.textbook_ = CreateMaybeMessage<::com::cps2004::Textbook>(arena, *from._impl_.book_type_.textbook_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Book)
}
inline PROTOBUF_NDEBUG_INLINE Book::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        publisher_(arena),
        author_(arena),
        book_type_{},
        _oneof_case_{} {}

inline void Book::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, product_),
           0,
           offsetof(Impl_, pages_) -
               offsetof(Impl_, product_) +
               sizeof(Impl_::pages_));
}
Book::~Book() {
  // @@protoc_insertion_point(destructor:com.cps2004.Book)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Book::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.publisher_.Destroy();
  _impl_.author_.Destroy();
  delete _impl_.product_;
  if (has_book_type()) {
    clear_book_type();
  }
  _impl_.~Impl_();
}

void Book::clear_book_type() {
// @@protoc_insertion_point(one_of_clear_start:com.cps2004.Book)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (book_type_case()) {
    case kFictionBook: {
      if (GetArena() == nullptr) {
        delete _impl_.book_type_.fictionbook_;
      }
      break;
    }
    case kTextbook: {
      if (GetArena() == nullptr) {
        delete _impl_.book_type_.textbook_;
      }
      break;
    }
    case BOOK_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = BOOK_TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void Book::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Book)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.publisher_.ClearToEmpty();
  _impl_.author_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.product_ != nullptr);
    _impl_.product_->Clear();
  }
  _impl_.pages_ = 0;
  clear_book_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Book::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 3, 40, 2> Book::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Book, _impl_._has_bits_),
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Book_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string publisher = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Book, _impl_.publisher_)}},
    // int32 pages = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Book, _impl_.pages_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Book, _impl_.pages_)}},
    // string author = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Book, _impl_.author_)}},
    // .com.cps2004.Product product = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 2, PROTOBUF_FIELD_OFFSET(Book, _impl_.product_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.FictionBook fictionBook = 1;
    {PROTOBUF_FIELD_OFFSET(Book, _impl_.book_type_.fictionbook_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.Textbook textbook = 2;
    {PROTOBUF_FIELD_OFFSET(Book, _impl_.book_type_.textbook_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.Product product = 3;
    {PROTOBUF_FIELD_OFFSET(Book, _impl_.product_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string publisher = 4;
    {PROTOBUF_FIELD_OFFSET(Book, _impl_.publisher_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 pages = 5;
    {PROTOBUF_FIELD_OFFSET(Book, _impl_.pages_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string author = 6;
    {PROTOBUF_FIELD_OFFSET(Book, _impl_.author_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::FictionBook>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Textbook>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Product>()},
  }}, {{
    "\20\0\0\0\11\0\6\0"
    "com.cps2004.Book"
    "publisher"
    "author"
  }},
};

::uint8_t* Book::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Book)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (book_type_case()) {
    case kFictionBook: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::fictionbook(this),
          _Internal::fictionbook(this).GetCachedSize(), target, stream);
      break;
    }
    case kTextbook: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::textbook(this),
          _Internal::textbook(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Product product = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::product(this),
        _Internal::product(this).GetCachedSize(), target, stream);
  }

  // string publisher = 4;
  if (!this->_internal_publisher().empty()) {
    const std::string& _s = this->_internal_publisher();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Book.publisher");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int32 pages = 5;
  if (this->_internal_pages() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_pages(), target);
  }

  // string author = 6;
  if (!this->_internal_author().empty()) {
    const std::string& _s = this->_internal_author();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Book.author");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Book)
  return target;
}

::size_t Book::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Book)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string publisher = 4;
  if (!this->_internal_publisher().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_publisher());
  }

  // string author = 6;
  if (!this->_internal_author().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_author());
  }

  // .com.cps2004.Product product = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.product_);
  }

  // int32 pages = 5;
  if (this->_internal_pages() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_pages());
  }

  switch (book_type_case()) {
    // .com.cps2004.FictionBook fictionBook = 1;
    case kFictionBook: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.book_type_.fictionbook_);
      break;
    }
    // .com.cps2004.Textbook textbook = 2;
    case kTextbook: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.book_type_.textbook_);
      break;
    }
    case BOOK_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Book::_class_data_ = {
    Book::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Book::GetClassData() const {
  return &_class_data_;
}

void Book::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Book*>(&to_msg);
  auto& from = static_cast<const Book&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Book)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_publisher().empty()) {
    _this->_internal_set_publisher(from._internal_publisher());
  }
  if (!from._internal_author().empty()) {
    _this->_internal_set_author(from._internal_author());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_product()->::com::cps2004::Product::MergeFrom(
        from._internal_product());
  }
  if (from._internal_pages() != 0) {
    _this->_internal_set_pages(from._internal_pages());
  }
  switch (from.book_type_case()) {
    case kFictionBook: {
      _this->_internal_mutable_fictionbook()->::com::cps2004::FictionBook::MergeFrom(
          from._internal_fictionbook());
      break;
    }
    case kTextbook: {
      _this->_internal_mutable_textbook()->::com::cps2004::Textbook::MergeFrom(
          from._internal_textbook());
      break;
    }
    case BOOK_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Book::CopyFrom(const Book& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Book)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Book::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Book::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Book::InternalSwap(Book* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.publisher_, &other->_impl_.publisher_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.author_, &other->_impl_.author_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Book, _impl_.pages_)
      + sizeof(Book::_impl_.pages_)
      - PROTOBUF_FIELD_OFFSET(Book, _impl_.product_)>(
          reinterpret_cast<char*>(&_impl_.product_),
          reinterpret_cast<char*>(&other->_impl_.product_));
  swap(_impl_.book_type_, other->_impl_.book_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Book::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[7]);
}
// ===================================================================

class FictionBook::_Internal {
 public:
  using HasBits = decltype(std::declval<FictionBook>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FictionBook, _impl_._has_bits_);
  static const ::com::cps2004::Book& book(const FictionBook* msg);
  static void set_has_book(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Book& FictionBook::_Internal::book(const FictionBook* msg) {
  return *msg->_impl_.book_;
}
FictionBook::FictionBook(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.FictionBook)
}
inline PROTOBUF_NDEBUG_INLINE FictionBook::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        genre_(arena, from.genre_),
        publicationdate_(arena, from.publicationdate_) {}

FictionBook::FictionBook(
    ::google::protobuf::Arena* arena,
    const FictionBook& from)
    : ::google::protobuf::Message(arena) {
  FictionBook* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.book_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Book>(arena, *from._impl_.book_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:com.cps2004.FictionBook)
}
inline PROTOBUF_NDEBUG_INLINE FictionBook::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        genre_(arena),
        publicationdate_(arena) {}

inline void FictionBook::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.book_ = {};
}
FictionBook::~FictionBook() {
  // @@protoc_insertion_point(destructor:com.cps2004.FictionBook)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FictionBook::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.genre_.Destroy();
  _impl_.publicationdate_.Destroy();
  delete _impl_.book_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FictionBook::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.FictionBook)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.genre_.ClearToEmpty();
  _impl_.publicationdate_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.book_ != nullptr);
    _impl_.book_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FictionBook::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 52, 2> FictionBook::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FictionBook, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FictionBook_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .com.cps2004.Book book = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FictionBook, _impl_.book_)}},
    // string genre = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FictionBook, _impl_.genre_)}},
    // string publicationDate = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(FictionBook, _impl_.publicationdate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Book book = 1;
    {PROTOBUF_FIELD_OFFSET(FictionBook, _impl_.book_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string genre = 2;
    {PROTOBUF_FIELD_OFFSET(FictionBook, _impl_.genre_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string publicationDate = 3;
    {PROTOBUF_FIELD_OFFSET(FictionBook, _impl_.publicationdate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Book>()},
  }}, {{
    "\27\0\5\17\0\0\0\0"
    "com.cps2004.FictionBook"
    "genre"
    "publicationDate"
  }},
};

::uint8_t* FictionBook::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.FictionBook)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Book book = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::book(this),
        _Internal::book(this).GetCachedSize(), target, stream);
  }

  // string genre = 2;
  if (!this->_internal_genre().empty()) {
    const std::string& _s = this->_internal_genre();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.FictionBook.genre");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string publicationDate = 3;
  if (!this->_internal_publicationdate().empty()) {
    const std::string& _s = this->_internal_publicationdate();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.FictionBook.publicationDate");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.FictionBook)
  return target;
}

::size_t FictionBook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.FictionBook)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string genre = 2;
  if (!this->_internal_genre().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_genre());
  }

  // string publicationDate = 3;
  if (!this->_internal_publicationdate().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_publicationdate());
  }

  // .com.cps2004.Book book = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.book_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FictionBook::_class_data_ = {
    FictionBook::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FictionBook::GetClassData() const {
  return &_class_data_;
}

void FictionBook::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FictionBook*>(&to_msg);
  auto& from = static_cast<const FictionBook&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.FictionBook)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_genre().empty()) {
    _this->_internal_set_genre(from._internal_genre());
  }
  if (!from._internal_publicationdate().empty()) {
    _this->_internal_set_publicationdate(from._internal_publicationdate());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_book()->::com::cps2004::Book::MergeFrom(
        from._internal_book());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FictionBook::CopyFrom(const FictionBook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.FictionBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FictionBook::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FictionBook::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FictionBook::InternalSwap(FictionBook* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.genre_, &other->_impl_.genre_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.publicationdate_, &other->_impl_.publicationdate_, arena);
  swap(_impl_.book_, other->_impl_.book_);
}

::google::protobuf::Metadata FictionBook::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[8]);
}
// ===================================================================

class Textbook::_Internal {
 public:
  using HasBits = decltype(std::declval<Textbook>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Textbook, _impl_._has_bits_);
  static const ::com::cps2004::Book& book(const Textbook* msg);
  static void set_has_book(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Book& Textbook::_Internal::book(const Textbook* msg) {
  return *msg->_impl_.book_;
}
Textbook::Textbook(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Textbook)
}
inline PROTOBUF_NDEBUG_INLINE Textbook::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        subject_(arena, from.subject_) {}

Textbook::Textbook(
    ::google::protobuf::Arena* arena,
    const Textbook& from)
    : ::google::protobuf::Message(arena) {
  Textbook* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.book_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Book>(arena, *from._impl_.book_)
                : nullptr;
  _impl_.edition_ = from._impl_.edition_;

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Textbook)
}
inline PROTOBUF_NDEBUG_INLINE Textbook::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        subject_(arena) {}

inline void Textbook::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, book_),
           0,
           offsetof(Impl_, edition_) -
               offsetof(Impl_, book_) +
               sizeof(Impl_::edition_));
}
Textbook::~Textbook() {
  // @@protoc_insertion_point(destructor:com.cps2004.Textbook)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Textbook::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.subject_.Destroy();
  delete _impl_.book_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Textbook::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Textbook)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subject_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.book_ != nullptr);
    _impl_.book_->Clear();
  }
  _impl_.edition_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Textbook::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 36, 2> Textbook::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Textbook, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Textbook_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .com.cps2004.Book book = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Textbook, _impl_.book_)}},
    // string subject = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Textbook, _impl_.subject_)}},
    // int32 edition = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Textbook, _impl_.edition_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Textbook, _impl_.edition_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Book book = 1;
    {PROTOBUF_FIELD_OFFSET(Textbook, _impl_.book_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string subject = 2;
    {PROTOBUF_FIELD_OFFSET(Textbook, _impl_.subject_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 edition = 3;
    {PROTOBUF_FIELD_OFFSET(Textbook, _impl_.edition_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Book>()},
  }}, {{
    "\24\0\7\0\0\0\0\0"
    "com.cps2004.Textbook"
    "subject"
  }},
};

::uint8_t* Textbook::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Textbook)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Book book = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::book(this),
        _Internal::book(this).GetCachedSize(), target, stream);
  }

  // string subject = 2;
  if (!this->_internal_subject().empty()) {
    const std::string& _s = this->_internal_subject();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Textbook.subject");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 edition = 3;
  if (this->_internal_edition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_edition(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Textbook)
  return target;
}

::size_t Textbook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Textbook)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subject = 2;
  if (!this->_internal_subject().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_subject());
  }

  // .com.cps2004.Book book = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.book_);
  }

  // int32 edition = 3;
  if (this->_internal_edition() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_edition());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Textbook::_class_data_ = {
    Textbook::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Textbook::GetClassData() const {
  return &_class_data_;
}

void Textbook::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Textbook*>(&to_msg);
  auto& from = static_cast<const Textbook&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Textbook)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_subject().empty()) {
    _this->_internal_set_subject(from._internal_subject());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_book()->::com::cps2004::Book::MergeFrom(
        from._internal_book());
  }
  if (from._internal_edition() != 0) {
    _this->_internal_set_edition(from._internal_edition());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Textbook::CopyFrom(const Textbook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Textbook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Textbook::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Textbook::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Textbook::InternalSwap(Textbook* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_, &other->_impl_.subject_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Textbook, _impl_.edition_)
      + sizeof(Textbook::_impl_.edition_)
      - PROTOBUF_FIELD_OFFSET(Textbook, _impl_.book_)>(
          reinterpret_cast<char*>(&_impl_.book_),
          reinterpret_cast<char*>(&other->_impl_.book_));
}

::google::protobuf::Metadata Textbook::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[9]);
}
// ===================================================================

class Electronics::_Internal {
 public:
  using HasBits = decltype(std::declval<Electronics>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Electronics, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Electronics, _impl_._oneof_case_);
  static const ::com::cps2004::Camera& camera(const Electronics* msg);
  static const ::com::cps2004::Laptop& laptop(const Electronics* msg);
  static const ::com::cps2004::Product& product(const Electronics* msg);
  static void set_has_product(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Camera& Electronics::_Internal::camera(const Electronics* msg) {
  return *msg->_impl_.electronics_type_.camera_;
}
const ::com::cps2004::Laptop& Electronics::_Internal::laptop(const Electronics* msg) {
  return *msg->_impl_.electronics_type_.laptop_;
}
const ::com::cps2004::Product& Electronics::_Internal::product(const Electronics* msg) {
  return *msg->_impl_.product_;
}
void Electronics::set_allocated_camera(::com::cps2004::Camera* camera) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_electronics_type();
  if (camera) {
    ::google::protobuf::Arena* submessage_arena = camera->GetArena();
    if (message_arena != submessage_arena) {
      camera = ::google::protobuf::internal::GetOwnedMessage(message_arena, camera, submessage_arena);
    }
    set_has_camera();
    _impl_.electronics_type_.camera_ = camera;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.Electronics.camera)
}
void Electronics::set_allocated_laptop(::com::cps2004::Laptop* laptop) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_electronics_type();
  if (laptop) {
    ::google::protobuf::Arena* submessage_arena = laptop->GetArena();
    if (message_arena != submessage_arena) {
      laptop = ::google::protobuf::internal::GetOwnedMessage(message_arena, laptop, submessage_arena);
    }
    set_has_laptop();
    _impl_.electronics_type_.laptop_ = laptop;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.Electronics.laptop)
}
Electronics::Electronics(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Electronics)
}
inline PROTOBUF_NDEBUG_INLINE Electronics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        manufacturer_(arena, from.manufacturer_),
        electronics_type_{},
        _oneof_case_{from._oneof_case_[0]} {}

Electronics::Electronics(
    ::google::protobuf::Arena* arena,
    const Electronics& from)
    : ::google::protobuf::Message(arena) {
  Electronics* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.product_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Product>(arena, *from._impl_.product_)
                : nullptr;
  _impl_.warranty_ = from._impl_.warranty_;
  switch (electronics_type_case()) {
    case ELECTRONICS_TYPE_NOT_SET:
      break;
      case kCamera:
        _impl_.electronics_type_.camera_ = CreateMaybeMessage<::com::cps2004::Camera>(arena, *from._impl_.electronics_type_.camera_);
        break;
      case kLaptop:
        _impl_.electronics_type_.laptop_ = CreateMaybeMessage<::com::cps2004::Laptop>(arena, *from._impl_.electronics_type_.laptop_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Electronics)
}
inline PROTOBUF_NDEBUG_INLINE Electronics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        manufacturer_(arena),
        electronics_type_{},
        _oneof_case_{} {}

inline void Electronics::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, product_),
           0,
           offsetof(Impl_, warranty_) -
               offsetof(Impl_, product_) +
               sizeof(Impl_::warranty_));
}
Electronics::~Electronics() {
  // @@protoc_insertion_point(destructor:com.cps2004.Electronics)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Electronics::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.manufacturer_.Destroy();
  delete _impl_.product_;
  if (has_electronics_type()) {
    clear_electronics_type();
  }
  _impl_.~Impl_();
}

void Electronics::clear_electronics_type() {
// @@protoc_insertion_point(one_of_clear_start:com.cps2004.Electronics)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (electronics_type_case()) {
    case kCamera: {
      if (GetArena() == nullptr) {
        delete _impl_.electronics_type_.camera_;
      }
      break;
    }
    case kLaptop: {
      if (GetArena() == nullptr) {
        delete _impl_.electronics_type_.laptop_;
      }
      break;
    }
    case ELECTRONICS_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ELECTRONICS_TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void Electronics::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Electronics)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.manufacturer_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.product_ != nullptr);
    _impl_.product_->Clear();
  }
  _impl_.warranty_ = 0;
  clear_electronics_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Electronics::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 3, 44, 2> Electronics::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Electronics, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Electronics_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string manufacturer = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Electronics, _impl_.manufacturer_)}},
    // int32 warranty = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Electronics, _impl_.warranty_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Electronics, _impl_.warranty_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .com.cps2004.Product product = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 2, PROTOBUF_FIELD_OFFSET(Electronics, _impl_.product_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Camera camera = 1;
    {PROTOBUF_FIELD_OFFSET(Electronics, _impl_.electronics_type_.camera_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.Laptop laptop = 2;
    {PROTOBUF_FIELD_OFFSET(Electronics, _impl_.electronics_type_.laptop_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.Product product = 3;
    {PROTOBUF_FIELD_OFFSET(Electronics, _impl_.product_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string manufacturer = 4;
    {PROTOBUF_FIELD_OFFSET(Electronics, _impl_.manufacturer_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 warranty = 5;
    {PROTOBUF_FIELD_OFFSET(Electronics, _impl_.warranty_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Camera>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Laptop>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Product>()},
  }}, {{
    "\27\0\0\0\14\0\0\0"
    "com.cps2004.Electronics"
    "manufacturer"
  }},
};

::uint8_t* Electronics::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Electronics)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (electronics_type_case()) {
    case kCamera: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::camera(this),
          _Internal::camera(this).GetCachedSize(), target, stream);
      break;
    }
    case kLaptop: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::laptop(this),
          _Internal::laptop(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Product product = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::product(this),
        _Internal::product(this).GetCachedSize(), target, stream);
  }

  // string manufacturer = 4;
  if (!this->_internal_manufacturer().empty()) {
    const std::string& _s = this->_internal_manufacturer();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Electronics.manufacturer");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int32 warranty = 5;
  if (this->_internal_warranty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_warranty(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Electronics)
  return target;
}

::size_t Electronics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Electronics)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string manufacturer = 4;
  if (!this->_internal_manufacturer().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_manufacturer());
  }

  // .com.cps2004.Product product = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.product_);
  }

  // int32 warranty = 5;
  if (this->_internal_warranty() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_warranty());
  }

  switch (electronics_type_case()) {
    // .com.cps2004.Camera camera = 1;
    case kCamera: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.electronics_type_.camera_);
      break;
    }
    // .com.cps2004.Laptop laptop = 2;
    case kLaptop: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.electronics_type_.laptop_);
      break;
    }
    case ELECTRONICS_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Electronics::_class_data_ = {
    Electronics::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Electronics::GetClassData() const {
  return &_class_data_;
}

void Electronics::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Electronics*>(&to_msg);
  auto& from = static_cast<const Electronics&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Electronics)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_manufacturer().empty()) {
    _this->_internal_set_manufacturer(from._internal_manufacturer());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_product()->::com::cps2004::Product::MergeFrom(
        from._internal_product());
  }
  if (from._internal_warranty() != 0) {
    _this->_internal_set_warranty(from._internal_warranty());
  }
  switch (from.electronics_type_case()) {
    case kCamera: {
      _this->_internal_mutable_camera()->::com::cps2004::Camera::MergeFrom(
          from._internal_camera());
      break;
    }
    case kLaptop: {
      _this->_internal_mutable_laptop()->::com::cps2004::Laptop::MergeFrom(
          from._internal_laptop());
      break;
    }
    case ELECTRONICS_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Electronics::CopyFrom(const Electronics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Electronics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Electronics::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Electronics::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Electronics::InternalSwap(Electronics* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.manufacturer_, &other->_impl_.manufacturer_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Electronics, _impl_.warranty_)
      + sizeof(Electronics::_impl_.warranty_)
      - PROTOBUF_FIELD_OFFSET(Electronics, _impl_.product_)>(
          reinterpret_cast<char*>(&_impl_.product_),
          reinterpret_cast<char*>(&other->_impl_.product_));
  swap(_impl_.electronics_type_, other->_impl_.electronics_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Electronics::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[10]);
}
// ===================================================================

class Camera::_Internal {
 public:
  using HasBits = decltype(std::declval<Camera>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Camera, _impl_._has_bits_);
  static const ::com::cps2004::Electronics& electronics(const Camera* msg);
  static void set_has_electronics(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Electronics& Camera::_Internal::electronics(const Camera* msg) {
  return *msg->_impl_.electronics_;
}
Camera::Camera(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Camera)
}
inline PROTOBUF_NDEBUG_INLINE Camera::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Camera::Camera(
    ::google::protobuf::Arena* arena,
    const Camera& from)
    : ::google::protobuf::Message(arena) {
  Camera* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.electronics_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Electronics>(arena, *from._impl_.electronics_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, megapixels_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, megapixels_),
           offsetof(Impl_, wirelessconnectivity_) -
               offsetof(Impl_, megapixels_) +
               sizeof(Impl_::wirelessconnectivity_));

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Camera)
}
inline PROTOBUF_NDEBUG_INLINE Camera::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Camera::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, electronics_),
           0,
           offsetof(Impl_, wirelessconnectivity_) -
               offsetof(Impl_, electronics_) +
               sizeof(Impl_::wirelessconnectivity_));
}
Camera::~Camera() {
  // @@protoc_insertion_point(destructor:com.cps2004.Camera)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Camera::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.electronics_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Camera::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Camera)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.electronics_ != nullptr);
    _impl_.electronics_->Clear();
  }
  ::memset(&_impl_.megapixels_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.wirelessconnectivity_) -
      reinterpret_cast<char*>(&_impl_.megapixels_)) + sizeof(_impl_.wirelessconnectivity_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Camera::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> Camera::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Camera, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Camera_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool wirelessConnectivity = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Camera, _impl_.wirelessconnectivity_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Camera, _impl_.wirelessconnectivity_)}},
    // .com.cps2004.Electronics electronics = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Camera, _impl_.electronics_)}},
    // double megaPixels = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Camera, _impl_.megapixels_)}},
    // int32 zoom = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Camera, _impl_.zoom_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Camera, _impl_.zoom_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Electronics electronics = 1;
    {PROTOBUF_FIELD_OFFSET(Camera, _impl_.electronics_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double megaPixels = 2;
    {PROTOBUF_FIELD_OFFSET(Camera, _impl_.megapixels_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // int32 zoom = 3;
    {PROTOBUF_FIELD_OFFSET(Camera, _impl_.zoom_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool wirelessConnectivity = 4;
    {PROTOBUF_FIELD_OFFSET(Camera, _impl_.wirelessconnectivity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Electronics>()},
  }}, {{
  }},
};

::uint8_t* Camera::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Camera)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Electronics electronics = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::electronics(this),
        _Internal::electronics(this).GetCachedSize(), target, stream);
  }

  // double megaPixels = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_megapixels = this->_internal_megapixels();
  ::uint64_t raw_megapixels;
  memcpy(&raw_megapixels, &tmp_megapixels, sizeof(tmp_megapixels));
  if (raw_megapixels != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_megapixels(), target);
  }

  // int32 zoom = 3;
  if (this->_internal_zoom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_zoom(), target);
  }

  // bool wirelessConnectivity = 4;
  if (this->_internal_wirelessconnectivity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_wirelessconnectivity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Camera)
  return target;
}

::size_t Camera::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Camera)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.cps2004.Electronics electronics = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.electronics_);
  }

  // double megaPixels = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_megapixels = this->_internal_megapixels();
  ::uint64_t raw_megapixels;
  memcpy(&raw_megapixels, &tmp_megapixels, sizeof(tmp_megapixels));
  if (raw_megapixels != 0) {
    total_size += 9;
  }

  // int32 zoom = 3;
  if (this->_internal_zoom() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_zoom());
  }

  // bool wirelessConnectivity = 4;
  if (this->_internal_wirelessconnectivity() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Camera::_class_data_ = {
    Camera::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Camera::GetClassData() const {
  return &_class_data_;
}

void Camera::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Camera*>(&to_msg);
  auto& from = static_cast<const Camera&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Camera)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_electronics()->::com::cps2004::Electronics::MergeFrom(
        from._internal_electronics());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_megapixels = from._internal_megapixels();
  ::uint64_t raw_megapixels;
  memcpy(&raw_megapixels, &tmp_megapixels, sizeof(tmp_megapixels));
  if (raw_megapixels != 0) {
    _this->_internal_set_megapixels(from._internal_megapixels());
  }
  if (from._internal_zoom() != 0) {
    _this->_internal_set_zoom(from._internal_zoom());
  }
  if (from._internal_wirelessconnectivity() != 0) {
    _this->_internal_set_wirelessconnectivity(from._internal_wirelessconnectivity());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Camera::CopyFrom(const Camera& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Camera)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Camera::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Camera::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Camera::InternalSwap(Camera* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Camera, _impl_.wirelessconnectivity_)
      + sizeof(Camera::_impl_.wirelessconnectivity_)
      - PROTOBUF_FIELD_OFFSET(Camera, _impl_.electronics_)>(
          reinterpret_cast<char*>(&_impl_.electronics_),
          reinterpret_cast<char*>(&other->_impl_.electronics_));
}

::google::protobuf::Metadata Camera::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[11]);
}
// ===================================================================

class Laptop::_Internal {
 public:
  using HasBits = decltype(std::declval<Laptop>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Laptop, _impl_._has_bits_);
  static const ::com::cps2004::Electronics& electronics(const Laptop* msg);
  static void set_has_electronics(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Electronics& Laptop::_Internal::electronics(const Laptop* msg) {
  return *msg->_impl_.electronics_;
}
Laptop::Laptop(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Laptop)
}
inline PROTOBUF_NDEBUG_INLINE Laptop::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        operatingsystem_(arena, from.operatingsystem_) {}

Laptop::Laptop(
    ::google::protobuf::Arena* arena,
    const Laptop& from)
    : ::google::protobuf::Message(arena) {
  Laptop* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.electronics_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Electronics>(arena, *from._impl_.electronics_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, screensize_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, screensize_),
           offsetof(Impl_, ram_) -
               offsetof(Impl_, screensize_) +
               sizeof(Impl_::ram_));

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Laptop)
}
inline PROTOBUF_NDEBUG_INLINE Laptop::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        operatingsystem_(arena) {}

inline void Laptop::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, electronics_),
           0,
           offsetof(Impl_, ram_) -
               offsetof(Impl_, electronics_) +
               sizeof(Impl_::ram_));
}
Laptop::~Laptop() {
  // @@protoc_insertion_point(destructor:com.cps2004.Laptop)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Laptop::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.operatingsystem_.Destroy();
  delete _impl_.electronics_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Laptop::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Laptop)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.operatingsystem_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.electronics_ != nullptr);
    _impl_.electronics_->Clear();
  }
  ::memset(&_impl_.screensize_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ram_) -
      reinterpret_cast<char*>(&_impl_.screensize_)) + sizeof(_impl_.ram_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Laptop::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 42, 2> Laptop::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Laptop, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Laptop_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 ram = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Laptop, _impl_.ram_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Laptop, _impl_.ram_)}},
    // .com.cps2004.Electronics electronics = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Laptop, _impl_.electronics_)}},
    // double screenSize = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Laptop, _impl_.screensize_)}},
    // string operatingSystem = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Laptop, _impl_.operatingsystem_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Electronics electronics = 1;
    {PROTOBUF_FIELD_OFFSET(Laptop, _impl_.electronics_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double screenSize = 2;
    {PROTOBUF_FIELD_OFFSET(Laptop, _impl_.screensize_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string operatingSystem = 3;
    {PROTOBUF_FIELD_OFFSET(Laptop, _impl_.operatingsystem_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 ram = 4;
    {PROTOBUF_FIELD_OFFSET(Laptop, _impl_.ram_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Electronics>()},
  }}, {{
    "\22\0\0\17\0\0\0\0"
    "com.cps2004.Laptop"
    "operatingSystem"
  }},
};

::uint8_t* Laptop::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Laptop)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Electronics electronics = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::electronics(this),
        _Internal::electronics(this).GetCachedSize(), target, stream);
  }

  // double screenSize = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_screensize = this->_internal_screensize();
  ::uint64_t raw_screensize;
  memcpy(&raw_screensize, &tmp_screensize, sizeof(tmp_screensize));
  if (raw_screensize != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_screensize(), target);
  }

  // string operatingSystem = 3;
  if (!this->_internal_operatingsystem().empty()) {
    const std::string& _s = this->_internal_operatingsystem();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Laptop.operatingSystem");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // int32 ram = 4;
  if (this->_internal_ram() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_ram(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Laptop)
  return target;
}

::size_t Laptop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Laptop)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string operatingSystem = 3;
  if (!this->_internal_operatingsystem().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_operatingsystem());
  }

  // .com.cps2004.Electronics electronics = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.electronics_);
  }

  // double screenSize = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_screensize = this->_internal_screensize();
  ::uint64_t raw_screensize;
  memcpy(&raw_screensize, &tmp_screensize, sizeof(tmp_screensize));
  if (raw_screensize != 0) {
    total_size += 9;
  }

  // int32 ram = 4;
  if (this->_internal_ram() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_ram());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Laptop::_class_data_ = {
    Laptop::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Laptop::GetClassData() const {
  return &_class_data_;
}

void Laptop::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Laptop*>(&to_msg);
  auto& from = static_cast<const Laptop&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Laptop)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_operatingsystem().empty()) {
    _this->_internal_set_operatingsystem(from._internal_operatingsystem());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_electronics()->::com::cps2004::Electronics::MergeFrom(
        from._internal_electronics());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_screensize = from._internal_screensize();
  ::uint64_t raw_screensize;
  memcpy(&raw_screensize, &tmp_screensize, sizeof(tmp_screensize));
  if (raw_screensize != 0) {
    _this->_internal_set_screensize(from._internal_screensize());
  }
  if (from._internal_ram() != 0) {
    _this->_internal_set_ram(from._internal_ram());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Laptop::CopyFrom(const Laptop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Laptop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Laptop::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Laptop::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Laptop::InternalSwap(Laptop* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.operatingsystem_, &other->_impl_.operatingsystem_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Laptop, _impl_.ram_)
      + sizeof(Laptop::_impl_.ram_)
      - PROTOBUF_FIELD_OFFSET(Laptop, _impl_.electronics_)>(
          reinterpret_cast<char*>(&_impl_.electronics_),
          reinterpret_cast<char*>(&other->_impl_.electronics_));
}

::google::protobuf::Metadata Laptop::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[12]);
}
// ===================================================================

class Food::_Internal {
 public:
  using HasBits = decltype(std::declval<Food>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Food, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Food, _impl_._oneof_case_);
  static const ::com::cps2004::Fruit& fruit(const Food* msg);
  static const ::com::cps2004::PremadeLunch& premadelunch(const Food* msg);
  static const ::com::cps2004::Product& product(const Food* msg);
  static void set_has_product(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Fruit& Food::_Internal::fruit(const Food* msg) {
  return *msg->_impl_.food_type_.fruit_;
}
const ::com::cps2004::PremadeLunch& Food::_Internal::premadelunch(const Food* msg) {
  return *msg->_impl_.food_type_.premadelunch_;
}
const ::com::cps2004::Product& Food::_Internal::product(const Food* msg) {
  return *msg->_impl_.product_;
}
void Food::set_allocated_fruit(::com::cps2004::Fruit* fruit) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_food_type();
  if (fruit) {
    ::google::protobuf::Arena* submessage_arena = fruit->GetArena();
    if (message_arena != submessage_arena) {
      fruit = ::google::protobuf::internal::GetOwnedMessage(message_arena, fruit, submessage_arena);
    }
    set_has_fruit();
    _impl_.food_type_.fruit_ = fruit;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.Food.fruit)
}
void Food::set_allocated_premadelunch(::com::cps2004::PremadeLunch* premadelunch) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_food_type();
  if (premadelunch) {
    ::google::protobuf::Arena* submessage_arena = premadelunch->GetArena();
    if (message_arena != submessage_arena) {
      premadelunch = ::google::protobuf::internal::GetOwnedMessage(message_arena, premadelunch, submessage_arena);
    }
    set_has_premadelunch();
    _impl_.food_type_.premadelunch_ = premadelunch;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.Food.premadeLunch)
}
Food::Food(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Food)
}
inline PROTOBUF_NDEBUG_INLINE Food::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        expirationdate_(arena, from.expirationdate_),
        food_type_{},
        _oneof_case_{from._oneof_case_[0]} {}

Food::Food(
    ::google::protobuf::Arena* arena,
    const Food& from)
    : ::google::protobuf::Message(arena) {
  Food* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.product_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Product>(arena, *from._impl_.product_)
                : nullptr;
  _impl_.weight_ = from._impl_.weight_;
  switch (food_type_case()) {
    case FOOD_TYPE_NOT_SET:
      break;
      case kFruit:
        _impl_.food_type_.fruit_ = CreateMaybeMessage<::com::cps2004::Fruit>(arena, *from._impl_.food_type_.fruit_);
        break;
      case kPremadeLunch:
        _impl_.food_type_.premadelunch_ = CreateMaybeMessage<::com::cps2004::PremadeLunch>(arena, *from._impl_.food_type_.premadelunch_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Food)
}
inline PROTOBUF_NDEBUG_INLINE Food::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        expirationdate_(arena),
        food_type_{},
        _oneof_case_{} {}

inline void Food::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, product_),
           0,
           offsetof(Impl_, weight_) -
               offsetof(Impl_, product_) +
               sizeof(Impl_::weight_));
}
Food::~Food() {
  // @@protoc_insertion_point(destructor:com.cps2004.Food)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Food::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.expirationdate_.Destroy();
  delete _impl_.product_;
  if (has_food_type()) {
    clear_food_type();
  }
  _impl_.~Impl_();
}

void Food::clear_food_type() {
// @@protoc_insertion_point(one_of_clear_start:com.cps2004.Food)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (food_type_case()) {
    case kFruit: {
      if (GetArena() == nullptr) {
        delete _impl_.food_type_.fruit_;
      }
      break;
    }
    case kPremadeLunch: {
      if (GetArena() == nullptr) {
        delete _impl_.food_type_.premadelunch_;
      }
      break;
    }
    case FOOD_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = FOOD_TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void Food::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Food)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.expirationdate_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.product_ != nullptr);
    _impl_.product_->Clear();
  }
  _impl_.weight_ = 0;
  clear_food_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Food::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 3, 39, 2> Food::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Food, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Food_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // double weight = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(Food, _impl_.weight_)}},
    // string expirationDate = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Food, _impl_.expirationdate_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .com.cps2004.Product product = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 2, PROTOBUF_FIELD_OFFSET(Food, _impl_.product_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Fruit fruit = 1;
    {PROTOBUF_FIELD_OFFSET(Food, _impl_.food_type_.fruit_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.PremadeLunch premadeLunch = 2;
    {PROTOBUF_FIELD_OFFSET(Food, _impl_.food_type_.premadelunch_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.Product product = 3;
    {PROTOBUF_FIELD_OFFSET(Food, _impl_.product_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double weight = 4;
    {PROTOBUF_FIELD_OFFSET(Food, _impl_.weight_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string expirationDate = 5;
    {PROTOBUF_FIELD_OFFSET(Food, _impl_.expirationdate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Fruit>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::PremadeLunch>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Product>()},
  }}, {{
    "\20\0\0\0\0\16\0\0"
    "com.cps2004.Food"
    "expirationDate"
  }},
};

::uint8_t* Food::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Food)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (food_type_case()) {
    case kFruit: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::fruit(this),
          _Internal::fruit(this).GetCachedSize(), target, stream);
      break;
    }
    case kPremadeLunch: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::premadelunch(this),
          _Internal::premadelunch(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Product product = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::product(this),
        _Internal::product(this).GetCachedSize(), target, stream);
  }

  // double weight = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_weight = this->_internal_weight();
  ::uint64_t raw_weight;
  memcpy(&raw_weight, &tmp_weight, sizeof(tmp_weight));
  if (raw_weight != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_weight(), target);
  }

  // string expirationDate = 5;
  if (!this->_internal_expirationdate().empty()) {
    const std::string& _s = this->_internal_expirationdate();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Food.expirationDate");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Food)
  return target;
}

::size_t Food::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Food)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string expirationDate = 5;
  if (!this->_internal_expirationdate().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_expirationdate());
  }

  // .com.cps2004.Product product = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.product_);
  }

  // double weight = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_weight = this->_internal_weight();
  ::uint64_t raw_weight;
  memcpy(&raw_weight, &tmp_weight, sizeof(tmp_weight));
  if (raw_weight != 0) {
    total_size += 9;
  }

  switch (food_type_case()) {
    // .com.cps2004.Fruit fruit = 1;
    case kFruit: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.food_type_.fruit_);
      break;
    }
    // .com.cps2004.PremadeLunch premadeLunch = 2;
    case kPremadeLunch: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.food_type_.premadelunch_);
      break;
    }
    case FOOD_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Food::_class_data_ = {
    Food::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Food::GetClassData() const {
  return &_class_data_;
}

void Food::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Food*>(&to_msg);
  auto& from = static_cast<const Food&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Food)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_expirationdate().empty()) {
    _this->_internal_set_expirationdate(from._internal_expirationdate());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_product()->::com::cps2004::Product::MergeFrom(
        from._internal_product());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_weight = from._internal_weight();
  ::uint64_t raw_weight;
  memcpy(&raw_weight, &tmp_weight, sizeof(tmp_weight));
  if (raw_weight != 0) {
    _this->_internal_set_weight(from._internal_weight());
  }
  switch (from.food_type_case()) {
    case kFruit: {
      _this->_internal_mutable_fruit()->::com::cps2004::Fruit::MergeFrom(
          from._internal_fruit());
      break;
    }
    case kPremadeLunch: {
      _this->_internal_mutable_premadelunch()->::com::cps2004::PremadeLunch::MergeFrom(
          from._internal_premadelunch());
      break;
    }
    case FOOD_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Food::CopyFrom(const Food& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Food)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Food::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Food::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Food::InternalSwap(Food* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.expirationdate_, &other->_impl_.expirationdate_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Food, _impl_.weight_)
      + sizeof(Food::_impl_.weight_)
      - PROTOBUF_FIELD_OFFSET(Food, _impl_.product_)>(
          reinterpret_cast<char*>(&_impl_.product_),
          reinterpret_cast<char*>(&other->_impl_.product_));
  swap(_impl_.food_type_, other->_impl_.food_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Food::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[13]);
}
// ===================================================================

class Fruit::_Internal {
 public:
  using HasBits = decltype(std::declval<Fruit>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Fruit, _impl_._has_bits_);
  static const ::com::cps2004::Food& food(const Fruit* msg);
  static void set_has_food(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Food& Fruit::_Internal::food(const Fruit* msg) {
  return *msg->_impl_.food_;
}
Fruit::Fruit(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Fruit)
}
inline PROTOBUF_NDEBUG_INLINE Fruit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        countryoforigin_(arena, from.countryoforigin_),
        type_(arena, from.type_) {}

Fruit::Fruit(
    ::google::protobuf::Arena* arena,
    const Fruit& from)
    : ::google::protobuf::Message(arena) {
  Fruit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.food_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Food>(arena, *from._impl_.food_)
                : nullptr;
  _impl_.organic_ = from._impl_.organic_;

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Fruit)
}
inline PROTOBUF_NDEBUG_INLINE Fruit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        countryoforigin_(arena),
        type_(arena) {}

inline void Fruit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, food_),
           0,
           offsetof(Impl_, organic_) -
               offsetof(Impl_, food_) +
               sizeof(Impl_::organic_));
}
Fruit::~Fruit() {
  // @@protoc_insertion_point(destructor:com.cps2004.Fruit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Fruit::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.countryoforigin_.Destroy();
  _impl_.type_.Destroy();
  delete _impl_.food_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Fruit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Fruit)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.countryoforigin_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.food_ != nullptr);
    _impl_.food_->Clear();
  }
  _impl_.organic_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Fruit::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 45, 2> Fruit::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Fruit, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Fruit_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool organic = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Fruit, _impl_.organic_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Fruit, _impl_.organic_)}},
    // .com.cps2004.Food food = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Fruit, _impl_.food_)}},
    // string countryOfOrigin = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Fruit, _impl_.countryoforigin_)}},
    // string type = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Fruit, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Food food = 1;
    {PROTOBUF_FIELD_OFFSET(Fruit, _impl_.food_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string countryOfOrigin = 2;
    {PROTOBUF_FIELD_OFFSET(Fruit, _impl_.countryoforigin_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 3;
    {PROTOBUF_FIELD_OFFSET(Fruit, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool organic = 4;
    {PROTOBUF_FIELD_OFFSET(Fruit, _impl_.organic_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Food>()},
  }}, {{
    "\21\0\17\4\0\0\0\0"
    "com.cps2004.Fruit"
    "countryOfOrigin"
    "type"
  }},
};

::uint8_t* Fruit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Fruit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Food food = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::food(this),
        _Internal::food(this).GetCachedSize(), target, stream);
  }

  // string countryOfOrigin = 2;
  if (!this->_internal_countryoforigin().empty()) {
    const std::string& _s = this->_internal_countryoforigin();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Fruit.countryOfOrigin");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string type = 3;
  if (!this->_internal_type().empty()) {
    const std::string& _s = this->_internal_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Fruit.type");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // bool organic = 4;
  if (this->_internal_organic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_organic(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Fruit)
  return target;
}

::size_t Fruit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Fruit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string countryOfOrigin = 2;
  if (!this->_internal_countryoforigin().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_countryoforigin());
  }

  // string type = 3;
  if (!this->_internal_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type());
  }

  // .com.cps2004.Food food = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.food_);
  }

  // bool organic = 4;
  if (this->_internal_organic() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Fruit::_class_data_ = {
    Fruit::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Fruit::GetClassData() const {
  return &_class_data_;
}

void Fruit::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Fruit*>(&to_msg);
  auto& from = static_cast<const Fruit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Fruit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_countryoforigin().empty()) {
    _this->_internal_set_countryoforigin(from._internal_countryoforigin());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_food()->::com::cps2004::Food::MergeFrom(
        from._internal_food());
  }
  if (from._internal_organic() != 0) {
    _this->_internal_set_organic(from._internal_organic());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Fruit::CopyFrom(const Fruit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Fruit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Fruit::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Fruit::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Fruit::InternalSwap(Fruit* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.countryoforigin_, &other->_impl_.countryoforigin_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Fruit, _impl_.organic_)
      + sizeof(Fruit::_impl_.organic_)
      - PROTOBUF_FIELD_OFFSET(Fruit, _impl_.food_)>(
          reinterpret_cast<char*>(&_impl_.food_),
          reinterpret_cast<char*>(&other->_impl_.food_));
}

::google::protobuf::Metadata Fruit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[14]);
}
// ===================================================================

class PremadeLunch::_Internal {
 public:
  using HasBits = decltype(std::declval<PremadeLunch>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PremadeLunch, _impl_._has_bits_);
  static const ::com::cps2004::Food& food(const PremadeLunch* msg);
  static void set_has_food(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Food& PremadeLunch::_Internal::food(const PremadeLunch* msg) {
  return *msg->_impl_.food_;
}
PremadeLunch::PremadeLunch(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.PremadeLunch)
}
inline PROTOBUF_NDEBUG_INLINE PremadeLunch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ingredients_(arena, from.ingredients_),
        allergens_(arena, from.allergens_) {}

PremadeLunch::PremadeLunch(
    ::google::protobuf::Arena* arena,
    const PremadeLunch& from)
    : ::google::protobuf::Message(arena) {
  PremadeLunch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.food_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Food>(arena, *from._impl_.food_)
                : nullptr;
  _impl_.perishable_ = from._impl_.perishable_;

  // @@protoc_insertion_point(copy_constructor:com.cps2004.PremadeLunch)
}
inline PROTOBUF_NDEBUG_INLINE PremadeLunch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        ingredients_(arena),
        allergens_(arena) {}

inline void PremadeLunch::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, food_),
           0,
           offsetof(Impl_, perishable_) -
               offsetof(Impl_, food_) +
               sizeof(Impl_::perishable_));
}
PremadeLunch::~PremadeLunch() {
  // @@protoc_insertion_point(destructor:com.cps2004.PremadeLunch)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PremadeLunch::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.ingredients_.Destroy();
  _impl_.allergens_.Destroy();
  delete _impl_.food_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PremadeLunch::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.PremadeLunch)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ingredients_.ClearToEmpty();
  _impl_.allergens_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.food_ != nullptr);
    _impl_.food_->Clear();
  }
  _impl_.perishable_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PremadeLunch::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 53, 2> PremadeLunch::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PremadeLunch, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PremadeLunch_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string allergens = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PremadeLunch, _impl_.allergens_)}},
    // .com.cps2004.Food food = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PremadeLunch, _impl_.food_)}},
    // bool perishable = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PremadeLunch, _impl_.perishable_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PremadeLunch, _impl_.perishable_)}},
    // string ingredients = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PremadeLunch, _impl_.ingredients_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Food food = 1;
    {PROTOBUF_FIELD_OFFSET(PremadeLunch, _impl_.food_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool perishable = 2;
    {PROTOBUF_FIELD_OFFSET(PremadeLunch, _impl_.perishable_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string ingredients = 3;
    {PROTOBUF_FIELD_OFFSET(PremadeLunch, _impl_.ingredients_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string allergens = 4;
    {PROTOBUF_FIELD_OFFSET(PremadeLunch, _impl_.allergens_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Food>()},
  }}, {{
    "\30\0\0\13\11\0\0\0"
    "com.cps2004.PremadeLunch"
    "ingredients"
    "allergens"
  }},
};

::uint8_t* PremadeLunch::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.PremadeLunch)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Food food = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::food(this),
        _Internal::food(this).GetCachedSize(), target, stream);
  }

  // bool perishable = 2;
  if (this->_internal_perishable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_perishable(), target);
  }

  // string ingredients = 3;
  if (!this->_internal_ingredients().empty()) {
    const std::string& _s = this->_internal_ingredients();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.PremadeLunch.ingredients");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string allergens = 4;
  if (!this->_internal_allergens().empty()) {
    const std::string& _s = this->_internal_allergens();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.PremadeLunch.allergens");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.PremadeLunch)
  return target;
}

::size_t PremadeLunch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.PremadeLunch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ingredients = 3;
  if (!this->_internal_ingredients().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ingredients());
  }

  // string allergens = 4;
  if (!this->_internal_allergens().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_allergens());
  }

  // .com.cps2004.Food food = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.food_);
  }

  // bool perishable = 2;
  if (this->_internal_perishable() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PremadeLunch::_class_data_ = {
    PremadeLunch::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PremadeLunch::GetClassData() const {
  return &_class_data_;
}

void PremadeLunch::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PremadeLunch*>(&to_msg);
  auto& from = static_cast<const PremadeLunch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.PremadeLunch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ingredients().empty()) {
    _this->_internal_set_ingredients(from._internal_ingredients());
  }
  if (!from._internal_allergens().empty()) {
    _this->_internal_set_allergens(from._internal_allergens());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_food()->::com::cps2004::Food::MergeFrom(
        from._internal_food());
  }
  if (from._internal_perishable() != 0) {
    _this->_internal_set_perishable(from._internal_perishable());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PremadeLunch::CopyFrom(const PremadeLunch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.PremadeLunch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PremadeLunch::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PremadeLunch::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PremadeLunch::InternalSwap(PremadeLunch* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ingredients_, &other->_impl_.ingredients_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.allergens_, &other->_impl_.allergens_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PremadeLunch, _impl_.perishable_)
      + sizeof(PremadeLunch::_impl_.perishable_)
      - PROTOBUF_FIELD_OFFSET(PremadeLunch, _impl_.food_)>(
          reinterpret_cast<char*>(&_impl_.food_),
          reinterpret_cast<char*>(&other->_impl_.food_));
}

::google::protobuf::Metadata PremadeLunch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[15]);
}
// ===================================================================

class Clothes::_Internal {
 public:
  using HasBits = decltype(std::declval<Clothes>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Clothes, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Clothes, _impl_._oneof_case_);
  static const ::com::cps2004::Pants& pants(const Clothes* msg);
  static const ::com::cps2004::TShirt& tshirt(const Clothes* msg);
  static const ::com::cps2004::Product& product(const Clothes* msg);
  static void set_has_product(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Pants& Clothes::_Internal::pants(const Clothes* msg) {
  return *msg->_impl_.clothes_type_.pants_;
}
const ::com::cps2004::TShirt& Clothes::_Internal::tshirt(const Clothes* msg) {
  return *msg->_impl_.clothes_type_.tshirt_;
}
const ::com::cps2004::Product& Clothes::_Internal::product(const Clothes* msg) {
  return *msg->_impl_.product_;
}
void Clothes::set_allocated_pants(::com::cps2004::Pants* pants) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_clothes_type();
  if (pants) {
    ::google::protobuf::Arena* submessage_arena = pants->GetArena();
    if (message_arena != submessage_arena) {
      pants = ::google::protobuf::internal::GetOwnedMessage(message_arena, pants, submessage_arena);
    }
    set_has_pants();
    _impl_.clothes_type_.pants_ = pants;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.Clothes.pants)
}
void Clothes::set_allocated_tshirt(::com::cps2004::TShirt* tshirt) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_clothes_type();
  if (tshirt) {
    ::google::protobuf::Arena* submessage_arena = tshirt->GetArena();
    if (message_arena != submessage_arena) {
      tshirt = ::google::protobuf::internal::GetOwnedMessage(message_arena, tshirt, submessage_arena);
    }
    set_has_tshirt();
    _impl_.clothes_type_.tshirt_ = tshirt;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.Clothes.tShirt)
}
Clothes::Clothes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Clothes)
}
inline PROTOBUF_NDEBUG_INLINE Clothes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        size_(arena, from.size_),
        brand_(arena, from.brand_),
        material_(arena, from.material_),
        clothes_type_{},
        _oneof_case_{from._oneof_case_[0]} {}

Clothes::Clothes(
    ::google::protobuf::Arena* arena,
    const Clothes& from)
    : ::google::protobuf::Message(arena) {
  Clothes* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.product_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Product>(arena, *from._impl_.product_)
                : nullptr;
  switch (clothes_type_case()) {
    case CLOTHES_TYPE_NOT_SET:
      break;
      case kPants:
        _impl_.clothes_type_.pants_ = CreateMaybeMessage<::com::cps2004::Pants>(arena, *from._impl_.clothes_type_.pants_);
        break;
      case kTShirt:
        _impl_.clothes_type_.tshirt_ = CreateMaybeMessage<::com::cps2004::TShirt>(arena, *from._impl_.clothes_type_.tshirt_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Clothes)
}
inline PROTOBUF_NDEBUG_INLINE Clothes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        size_(arena),
        brand_(arena),
        material_(arena),
        clothes_type_{},
        _oneof_case_{} {}

inline void Clothes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.product_ = {};
}
Clothes::~Clothes() {
  // @@protoc_insertion_point(destructor:com.cps2004.Clothes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Clothes::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.size_.Destroy();
  _impl_.brand_.Destroy();
  _impl_.material_.Destroy();
  delete _impl_.product_;
  if (has_clothes_type()) {
    clear_clothes_type();
  }
  _impl_.~Impl_();
}

void Clothes::clear_clothes_type() {
// @@protoc_insertion_point(one_of_clear_start:com.cps2004.Clothes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (clothes_type_case()) {
    case kPants: {
      if (GetArena() == nullptr) {
        delete _impl_.clothes_type_.pants_;
      }
      break;
    }
    case kTShirt: {
      if (GetArena() == nullptr) {
        delete _impl_.clothes_type_.tshirt_;
      }
      break;
    }
    case CLOTHES_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CLOTHES_TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void Clothes::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Clothes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.size_.ClearToEmpty();
  _impl_.brand_.ClearToEmpty();
  _impl_.material_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.product_ != nullptr);
    _impl_.product_->Clear();
  }
  clear_clothes_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Clothes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 3, 45, 2> Clothes::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Clothes, _impl_._has_bits_),
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Clothes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string size = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Clothes, _impl_.size_)}},
    // string brand = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Clothes, _impl_.brand_)}},
    // string material = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Clothes, _impl_.material_)}},
    // .com.cps2004.Product product = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 2, PROTOBUF_FIELD_OFFSET(Clothes, _impl_.product_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Pants pants = 1;
    {PROTOBUF_FIELD_OFFSET(Clothes, _impl_.clothes_type_.pants_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.TShirt tShirt = 2;
    {PROTOBUF_FIELD_OFFSET(Clothes, _impl_.clothes_type_.tshirt_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.Product product = 3;
    {PROTOBUF_FIELD_OFFSET(Clothes, _impl_.product_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string size = 4;
    {PROTOBUF_FIELD_OFFSET(Clothes, _impl_.size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string brand = 5;
    {PROTOBUF_FIELD_OFFSET(Clothes, _impl_.brand_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string material = 6;
    {PROTOBUF_FIELD_OFFSET(Clothes, _impl_.material_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Pants>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::TShirt>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Product>()},
  }}, {{
    "\23\0\0\0\4\5\10\0"
    "com.cps2004.Clothes"
    "size"
    "brand"
    "material"
  }},
};

::uint8_t* Clothes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Clothes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (clothes_type_case()) {
    case kPants: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::pants(this),
          _Internal::pants(this).GetCachedSize(), target, stream);
      break;
    }
    case kTShirt: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::tshirt(this),
          _Internal::tshirt(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Product product = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::product(this),
        _Internal::product(this).GetCachedSize(), target, stream);
  }

  // string size = 4;
  if (!this->_internal_size().empty()) {
    const std::string& _s = this->_internal_size();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Clothes.size");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string brand = 5;
  if (!this->_internal_brand().empty()) {
    const std::string& _s = this->_internal_brand();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Clothes.brand");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string material = 6;
  if (!this->_internal_material().empty()) {
    const std::string& _s = this->_internal_material();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Clothes.material");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Clothes)
  return target;
}

::size_t Clothes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Clothes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string size = 4;
  if (!this->_internal_size().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_size());
  }

  // string brand = 5;
  if (!this->_internal_brand().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_brand());
  }

  // string material = 6;
  if (!this->_internal_material().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_material());
  }

  // .com.cps2004.Product product = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.product_);
  }

  switch (clothes_type_case()) {
    // .com.cps2004.Pants pants = 1;
    case kPants: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.clothes_type_.pants_);
      break;
    }
    // .com.cps2004.TShirt tShirt = 2;
    case kTShirt: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.clothes_type_.tshirt_);
      break;
    }
    case CLOTHES_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Clothes::_class_data_ = {
    Clothes::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Clothes::GetClassData() const {
  return &_class_data_;
}

void Clothes::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Clothes*>(&to_msg);
  auto& from = static_cast<const Clothes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Clothes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_size().empty()) {
    _this->_internal_set_size(from._internal_size());
  }
  if (!from._internal_brand().empty()) {
    _this->_internal_set_brand(from._internal_brand());
  }
  if (!from._internal_material().empty()) {
    _this->_internal_set_material(from._internal_material());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_product()->::com::cps2004::Product::MergeFrom(
        from._internal_product());
  }
  switch (from.clothes_type_case()) {
    case kPants: {
      _this->_internal_mutable_pants()->::com::cps2004::Pants::MergeFrom(
          from._internal_pants());
      break;
    }
    case kTShirt: {
      _this->_internal_mutable_tshirt()->::com::cps2004::TShirt::MergeFrom(
          from._internal_tshirt());
      break;
    }
    case CLOTHES_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Clothes::CopyFrom(const Clothes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Clothes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Clothes::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Clothes::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Clothes::InternalSwap(Clothes* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.size_, &other->_impl_.size_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.brand_, &other->_impl_.brand_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.material_, &other->_impl_.material_, arena);
  swap(_impl_.product_, other->_impl_.product_);
  swap(_impl_.clothes_type_, other->_impl_.clothes_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Clothes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[16]);
}
// ===================================================================

class Pants::_Internal {
 public:
  using HasBits = decltype(std::declval<Pants>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Pants, _impl_._has_bits_);
  static const ::com::cps2004::Clothes& clothes(const Pants* msg);
  static void set_has_clothes(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Clothes& Pants::_Internal::clothes(const Pants* msg) {
  return *msg->_impl_.clothes_;
}
Pants::Pants(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Pants)
}
inline PROTOBUF_NDEBUG_INLINE Pants::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Pants::Pants(
    ::google::protobuf::Arena* arena,
    const Pants& from)
    : ::google::protobuf::Message(arena) {
  Pants* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.clothes_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Clothes>(arena, *from._impl_.clothes_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, inseam_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, inseam_),
           offsetof(Impl_, waist_) -
               offsetof(Impl_, inseam_) +
               sizeof(Impl_::waist_));

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Pants)
}
inline PROTOBUF_NDEBUG_INLINE Pants::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Pants::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, clothes_),
           0,
           offsetof(Impl_, waist_) -
               offsetof(Impl_, clothes_) +
               sizeof(Impl_::waist_));
}
Pants::~Pants() {
  // @@protoc_insertion_point(destructor:com.cps2004.Pants)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Pants::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.clothes_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Pants::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Pants)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.clothes_ != nullptr);
    _impl_.clothes_->Clear();
  }
  ::memset(&_impl_.inseam_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.waist_) -
      reinterpret_cast<char*>(&_impl_.inseam_)) + sizeof(_impl_.waist_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Pants::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> Pants::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Pants, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Pants_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .com.cps2004.Clothes clothes = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Pants, _impl_.clothes_)}},
    // double inseam = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Pants, _impl_.inseam_)}},
    // double waist = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Pants, _impl_.waist_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Clothes clothes = 1;
    {PROTOBUF_FIELD_OFFSET(Pants, _impl_.clothes_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double inseam = 2;
    {PROTOBUF_FIELD_OFFSET(Pants, _impl_.inseam_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double waist = 3;
    {PROTOBUF_FIELD_OFFSET(Pants, _impl_.waist_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Clothes>()},
  }}, {{
  }},
};

::uint8_t* Pants::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Pants)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Clothes clothes = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::clothes(this),
        _Internal::clothes(this).GetCachedSize(), target, stream);
  }

  // double inseam = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_inseam = this->_internal_inseam();
  ::uint64_t raw_inseam;
  memcpy(&raw_inseam, &tmp_inseam, sizeof(tmp_inseam));
  if (raw_inseam != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_inseam(), target);
  }

  // double waist = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_waist = this->_internal_waist();
  ::uint64_t raw_waist;
  memcpy(&raw_waist, &tmp_waist, sizeof(tmp_waist));
  if (raw_waist != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_waist(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Pants)
  return target;
}

::size_t Pants::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Pants)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.cps2004.Clothes clothes = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.clothes_);
  }

  // double inseam = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_inseam = this->_internal_inseam();
  ::uint64_t raw_inseam;
  memcpy(&raw_inseam, &tmp_inseam, sizeof(tmp_inseam));
  if (raw_inseam != 0) {
    total_size += 9;
  }

  // double waist = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_waist = this->_internal_waist();
  ::uint64_t raw_waist;
  memcpy(&raw_waist, &tmp_waist, sizeof(tmp_waist));
  if (raw_waist != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Pants::_class_data_ = {
    Pants::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Pants::GetClassData() const {
  return &_class_data_;
}

void Pants::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Pants*>(&to_msg);
  auto& from = static_cast<const Pants&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Pants)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_clothes()->::com::cps2004::Clothes::MergeFrom(
        from._internal_clothes());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_inseam = from._internal_inseam();
  ::uint64_t raw_inseam;
  memcpy(&raw_inseam, &tmp_inseam, sizeof(tmp_inseam));
  if (raw_inseam != 0) {
    _this->_internal_set_inseam(from._internal_inseam());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_waist = from._internal_waist();
  ::uint64_t raw_waist;
  memcpy(&raw_waist, &tmp_waist, sizeof(tmp_waist));
  if (raw_waist != 0) {
    _this->_internal_set_waist(from._internal_waist());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Pants::CopyFrom(const Pants& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Pants)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Pants::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Pants::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Pants::InternalSwap(Pants* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pants, _impl_.waist_)
      + sizeof(Pants::_impl_.waist_)
      - PROTOBUF_FIELD_OFFSET(Pants, _impl_.clothes_)>(
          reinterpret_cast<char*>(&_impl_.clothes_),
          reinterpret_cast<char*>(&other->_impl_.clothes_));
}

::google::protobuf::Metadata Pants::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[17]);
}
// ===================================================================

class TShirt::_Internal {
 public:
  using HasBits = decltype(std::declval<TShirt>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TShirt, _impl_._has_bits_);
  static const ::com::cps2004::Clothes& clothes(const TShirt* msg);
  static void set_has_clothes(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Clothes& TShirt::_Internal::clothes(const TShirt* msg) {
  return *msg->_impl_.clothes_;
}
TShirt::TShirt(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.TShirt)
}
inline PROTOBUF_NDEBUG_INLINE TShirt::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        collar_(arena, from.collar_) {}

TShirt::TShirt(
    ::google::protobuf::Arena* arena,
    const TShirt& from)
    : ::google::protobuf::Message(arena) {
  TShirt* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.clothes_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Clothes>(arena, *from._impl_.clothes_)
                : nullptr;
  _impl_.graphics_ = from._impl_.graphics_;

  // @@protoc_insertion_point(copy_constructor:com.cps2004.TShirt)
}
inline PROTOBUF_NDEBUG_INLINE TShirt::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        collar_(arena) {}

inline void TShirt::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, clothes_),
           0,
           offsetof(Impl_, graphics_) -
               offsetof(Impl_, clothes_) +
               sizeof(Impl_::graphics_));
}
TShirt::~TShirt() {
  // @@protoc_insertion_point(destructor:com.cps2004.TShirt)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TShirt::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.collar_.Destroy();
  delete _impl_.clothes_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TShirt::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.TShirt)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.collar_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.clothes_ != nullptr);
    _impl_.clothes_->Clear();
  }
  _impl_.graphics_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TShirt::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 33, 2> TShirt::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TShirt, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TShirt_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .com.cps2004.Clothes clothes = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TShirt, _impl_.clothes_)}},
    // string collar = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TShirt, _impl_.collar_)}},
    // bool graphics = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TShirt, _impl_.graphics_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TShirt, _impl_.graphics_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Clothes clothes = 1;
    {PROTOBUF_FIELD_OFFSET(TShirt, _impl_.clothes_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string collar = 2;
    {PROTOBUF_FIELD_OFFSET(TShirt, _impl_.collar_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool graphics = 3;
    {PROTOBUF_FIELD_OFFSET(TShirt, _impl_.graphics_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Clothes>()},
  }}, {{
    "\22\0\6\0\0\0\0\0"
    "com.cps2004.TShirt"
    "collar"
  }},
};

::uint8_t* TShirt::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.TShirt)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Clothes clothes = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::clothes(this),
        _Internal::clothes(this).GetCachedSize(), target, stream);
  }

  // string collar = 2;
  if (!this->_internal_collar().empty()) {
    const std::string& _s = this->_internal_collar();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.TShirt.collar");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // bool graphics = 3;
  if (this->_internal_graphics() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_graphics(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.TShirt)
  return target;
}

::size_t TShirt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.TShirt)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string collar = 2;
  if (!this->_internal_collar().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_collar());
  }

  // .com.cps2004.Clothes clothes = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.clothes_);
  }

  // bool graphics = 3;
  if (this->_internal_graphics() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TShirt::_class_data_ = {
    TShirt::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TShirt::GetClassData() const {
  return &_class_data_;
}

void TShirt::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TShirt*>(&to_msg);
  auto& from = static_cast<const TShirt&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.TShirt)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_collar().empty()) {
    _this->_internal_set_collar(from._internal_collar());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_clothes()->::com::cps2004::Clothes::MergeFrom(
        from._internal_clothes());
  }
  if (from._internal_graphics() != 0) {
    _this->_internal_set_graphics(from._internal_graphics());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TShirt::CopyFrom(const TShirt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.TShirt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TShirt::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TShirt::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TShirt::InternalSwap(TShirt* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.collar_, &other->_impl_.collar_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TShirt, _impl_.graphics_)
      + sizeof(TShirt::_impl_.graphics_)
      - PROTOBUF_FIELD_OFFSET(TShirt, _impl_.clothes_)>(
          reinterpret_cast<char*>(&_impl_.clothes_),
          reinterpret_cast<char*>(&other->_impl_.clothes_));
}

::google::protobuf::Metadata TShirt::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[18]);
}
// ===================================================================

class Furniture::_Internal {
 public:
  using HasBits = decltype(std::declval<Furniture>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Furniture, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::com::cps2004::Furniture, _impl_._oneof_case_);
  static const ::com::cps2004::Table& table(const Furniture* msg);
  static const ::com::cps2004::Chair& chair(const Furniture* msg);
  static const ::com::cps2004::Product& product(const Furniture* msg);
  static void set_has_product(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Table& Furniture::_Internal::table(const Furniture* msg) {
  return *msg->_impl_.furniture_type_.table_;
}
const ::com::cps2004::Chair& Furniture::_Internal::chair(const Furniture* msg) {
  return *msg->_impl_.furniture_type_.chair_;
}
const ::com::cps2004::Product& Furniture::_Internal::product(const Furniture* msg) {
  return *msg->_impl_.product_;
}
void Furniture::set_allocated_table(::com::cps2004::Table* table) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_furniture_type();
  if (table) {
    ::google::protobuf::Arena* submessage_arena = table->GetArena();
    if (message_arena != submessage_arena) {
      table = ::google::protobuf::internal::GetOwnedMessage(message_arena, table, submessage_arena);
    }
    set_has_table();
    _impl_.furniture_type_.table_ = table;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.Furniture.table)
}
void Furniture::set_allocated_chair(::com::cps2004::Chair* chair) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_furniture_type();
  if (chair) {
    ::google::protobuf::Arena* submessage_arena = chair->GetArena();
    if (message_arena != submessage_arena) {
      chair = ::google::protobuf::internal::GetOwnedMessage(message_arena, chair, submessage_arena);
    }
    set_has_chair();
    _impl_.furniture_type_.chair_ = chair;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.Furniture.chair)
}
Furniture::Furniture(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Furniture)
}
inline PROTOBUF_NDEBUG_INLINE Furniture::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        material_(arena, from.material_),
        dimensions_(arena, from.dimensions_),
        furniture_type_{},
        _oneof_case_{from._oneof_case_[0]} {}

Furniture::Furniture(
    ::google::protobuf::Arena* arena,
    const Furniture& from)
    : ::google::protobuf::Message(arena) {
  Furniture* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.product_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Product>(arena, *from._impl_.product_)
                : nullptr;
  switch (furniture_type_case()) {
    case FURNITURE_TYPE_NOT_SET:
      break;
      case kTable:
        _impl_.furniture_type_.table_ = CreateMaybeMessage<::com::cps2004::Table>(arena, *from._impl_.furniture_type_.table_);
        break;
      case kChair:
        _impl_.furniture_type_.chair_ = CreateMaybeMessage<::com::cps2004::Chair>(arena, *from._impl_.furniture_type_.chair_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Furniture)
}
inline PROTOBUF_NDEBUG_INLINE Furniture::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        material_(arena),
        dimensions_(arena),
        furniture_type_{},
        _oneof_case_{} {}

inline void Furniture::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.product_ = {};
}
Furniture::~Furniture() {
  // @@protoc_insertion_point(destructor:com.cps2004.Furniture)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Furniture::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.material_.Destroy();
  _impl_.dimensions_.Destroy();
  delete _impl_.product_;
  if (has_furniture_type()) {
    clear_furniture_type();
  }
  _impl_.~Impl_();
}

void Furniture::clear_furniture_type() {
// @@protoc_insertion_point(one_of_clear_start:com.cps2004.Furniture)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (furniture_type_case()) {
    case kTable: {
      if (GetArena() == nullptr) {
        delete _impl_.furniture_type_.table_;
      }
      break;
    }
    case kChair: {
      if (GetArena() == nullptr) {
        delete _impl_.furniture_type_.chair_;
      }
      break;
    }
    case FURNITURE_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = FURNITURE_TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void Furniture::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Furniture)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.material_.ClearToEmpty();
  _impl_.dimensions_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.product_ != nullptr);
    _impl_.product_->Clear();
  }
  clear_furniture_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Furniture::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 3, 48, 2> Furniture::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Furniture, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Furniture_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string material = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Furniture, _impl_.material_)}},
    // string dimensions = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Furniture, _impl_.dimensions_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .com.cps2004.Product product = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 2, PROTOBUF_FIELD_OFFSET(Furniture, _impl_.product_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Table table = 1;
    {PROTOBUF_FIELD_OFFSET(Furniture, _impl_.furniture_type_.table_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.Chair chair = 2;
    {PROTOBUF_FIELD_OFFSET(Furniture, _impl_.furniture_type_.chair_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.Product product = 3;
    {PROTOBUF_FIELD_OFFSET(Furniture, _impl_.product_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string material = 4;
    {PROTOBUF_FIELD_OFFSET(Furniture, _impl_.material_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string dimensions = 5;
    {PROTOBUF_FIELD_OFFSET(Furniture, _impl_.dimensions_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Table>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Chair>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Product>()},
  }}, {{
    "\25\0\0\0\10\12\0\0"
    "com.cps2004.Furniture"
    "material"
    "dimensions"
  }},
};

::uint8_t* Furniture::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Furniture)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (furniture_type_case()) {
    case kTable: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::table(this),
          _Internal::table(this).GetCachedSize(), target, stream);
      break;
    }
    case kChair: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::chair(this),
          _Internal::chair(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Product product = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::product(this),
        _Internal::product(this).GetCachedSize(), target, stream);
  }

  // string material = 4;
  if (!this->_internal_material().empty()) {
    const std::string& _s = this->_internal_material();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Furniture.material");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string dimensions = 5;
  if (!this->_internal_dimensions().empty()) {
    const std::string& _s = this->_internal_dimensions();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Furniture.dimensions");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Furniture)
  return target;
}

::size_t Furniture::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Furniture)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string material = 4;
  if (!this->_internal_material().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_material());
  }

  // string dimensions = 5;
  if (!this->_internal_dimensions().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_dimensions());
  }

  // .com.cps2004.Product product = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.product_);
  }

  switch (furniture_type_case()) {
    // .com.cps2004.Table table = 1;
    case kTable: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.furniture_type_.table_);
      break;
    }
    // .com.cps2004.Chair chair = 2;
    case kChair: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.furniture_type_.chair_);
      break;
    }
    case FURNITURE_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Furniture::_class_data_ = {
    Furniture::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Furniture::GetClassData() const {
  return &_class_data_;
}

void Furniture::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Furniture*>(&to_msg);
  auto& from = static_cast<const Furniture&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Furniture)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_material().empty()) {
    _this->_internal_set_material(from._internal_material());
  }
  if (!from._internal_dimensions().empty()) {
    _this->_internal_set_dimensions(from._internal_dimensions());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_product()->::com::cps2004::Product::MergeFrom(
        from._internal_product());
  }
  switch (from.furniture_type_case()) {
    case kTable: {
      _this->_internal_mutable_table()->::com::cps2004::Table::MergeFrom(
          from._internal_table());
      break;
    }
    case kChair: {
      _this->_internal_mutable_chair()->::com::cps2004::Chair::MergeFrom(
          from._internal_chair());
      break;
    }
    case FURNITURE_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Furniture::CopyFrom(const Furniture& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Furniture)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Furniture::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Furniture::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Furniture::InternalSwap(Furniture* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.material_, &other->_impl_.material_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimensions_, &other->_impl_.dimensions_, arena);
  swap(_impl_.product_, other->_impl_.product_);
  swap(_impl_.furniture_type_, other->_impl_.furniture_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Furniture::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[19]);
}
// ===================================================================

class Table::_Internal {
 public:
  using HasBits = decltype(std::declval<Table>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Table, _impl_._has_bits_);
  static const ::com::cps2004::Furniture& furniture(const Table* msg);
  static void set_has_furniture(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Furniture& Table::_Internal::furniture(const Table* msg) {
  return *msg->_impl_.furniture_;
}
Table::Table(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Table)
}
inline PROTOBUF_NDEBUG_INLINE Table::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        shape_(arena, from.shape_) {}

Table::Table(
    ::google::protobuf::Arena* arena,
    const Table& from)
    : ::google::protobuf::Message(arena) {
  Table* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.furniture_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Furniture>(arena, *from._impl_.furniture_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, extendable_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, extendable_),
           offsetof(Impl_, nooflegs_) -
               offsetof(Impl_, extendable_) +
               sizeof(Impl_::nooflegs_));

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Table)
}
inline PROTOBUF_NDEBUG_INLINE Table::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        shape_(arena) {}

inline void Table::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, furniture_),
           0,
           offsetof(Impl_, nooflegs_) -
               offsetof(Impl_, furniture_) +
               sizeof(Impl_::nooflegs_));
}
Table::~Table() {
  // @@protoc_insertion_point(destructor:com.cps2004.Table)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Table::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.shape_.Destroy();
  delete _impl_.furniture_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Table::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Table)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.shape_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.furniture_ != nullptr);
    _impl_.furniture_->Clear();
  }
  ::memset(&_impl_.extendable_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.nooflegs_) -
      reinterpret_cast<char*>(&_impl_.extendable_)) + sizeof(_impl_.nooflegs_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Table::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 31, 2> Table::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Table, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Table_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 noOfLegs = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Table, _impl_.nooflegs_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Table, _impl_.nooflegs_)}},
    // .com.cps2004.Furniture furniture = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Table, _impl_.furniture_)}},
    // bool extendable = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Table, _impl_.extendable_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Table, _impl_.extendable_)}},
    // string shape = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Table, _impl_.shape_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Furniture furniture = 1;
    {PROTOBUF_FIELD_OFFSET(Table, _impl_.furniture_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool extendable = 2;
    {PROTOBUF_FIELD_OFFSET(Table, _impl_.extendable_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string shape = 3;
    {PROTOBUF_FIELD_OFFSET(Table, _impl_.shape_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 noOfLegs = 4;
    {PROTOBUF_FIELD_OFFSET(Table, _impl_.nooflegs_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Furniture>()},
  }}, {{
    "\21\0\0\5\0\0\0\0"
    "com.cps2004.Table"
    "shape"
  }},
};

::uint8_t* Table::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Table)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Furniture furniture = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::furniture(this),
        _Internal::furniture(this).GetCachedSize(), target, stream);
  }

  // bool extendable = 2;
  if (this->_internal_extendable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_extendable(), target);
  }

  // string shape = 3;
  if (!this->_internal_shape().empty()) {
    const std::string& _s = this->_internal_shape();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Table.shape");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // int32 noOfLegs = 4;
  if (this->_internal_nooflegs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_nooflegs(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Table)
  return target;
}

::size_t Table::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Table)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string shape = 3;
  if (!this->_internal_shape().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_shape());
  }

  // .com.cps2004.Furniture furniture = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.furniture_);
  }

  // bool extendable = 2;
  if (this->_internal_extendable() != 0) {
    total_size += 2;
  }

  // int32 noOfLegs = 4;
  if (this->_internal_nooflegs() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_nooflegs());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Table::_class_data_ = {
    Table::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Table::GetClassData() const {
  return &_class_data_;
}

void Table::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Table*>(&to_msg);
  auto& from = static_cast<const Table&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Table)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_shape().empty()) {
    _this->_internal_set_shape(from._internal_shape());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_furniture()->::com::cps2004::Furniture::MergeFrom(
        from._internal_furniture());
  }
  if (from._internal_extendable() != 0) {
    _this->_internal_set_extendable(from._internal_extendable());
  }
  if (from._internal_nooflegs() != 0) {
    _this->_internal_set_nooflegs(from._internal_nooflegs());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Table::CopyFrom(const Table& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Table)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Table::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Table::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Table::InternalSwap(Table* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.shape_, &other->_impl_.shape_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Table, _impl_.nooflegs_)
      + sizeof(Table::_impl_.nooflegs_)
      - PROTOBUF_FIELD_OFFSET(Table, _impl_.furniture_)>(
          reinterpret_cast<char*>(&_impl_.furniture_),
          reinterpret_cast<char*>(&other->_impl_.furniture_));
}

::google::protobuf::Metadata Table::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[20]);
}
// ===================================================================

class Chair::_Internal {
 public:
  using HasBits = decltype(std::declval<Chair>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Chair, _impl_._has_bits_);
  static const ::com::cps2004::Furniture& furniture(const Chair* msg);
  static void set_has_furniture(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Furniture& Chair::_Internal::furniture(const Chair* msg) {
  return *msg->_impl_.furniture_;
}
Chair::Chair(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Chair)
}
inline PROTOBUF_NDEBUG_INLINE Chair::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Chair::Chair(
    ::google::protobuf::Arena* arena,
    const Chair& from)
    : ::google::protobuf::Message(arena) {
  Chair* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.furniture_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Furniture>(arena, *from._impl_.furniture_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, seatlength_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, seatlength_),
           offsetof(Impl_, armrests_) -
               offsetof(Impl_, seatlength_) +
               sizeof(Impl_::armrests_));

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Chair)
}
inline PROTOBUF_NDEBUG_INLINE Chair::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Chair::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, furniture_),
           0,
           offsetof(Impl_, armrests_) -
               offsetof(Impl_, furniture_) +
               sizeof(Impl_::armrests_));
}
Chair::~Chair() {
  // @@protoc_insertion_point(destructor:com.cps2004.Chair)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Chair::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.furniture_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Chair::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Chair)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.furniture_ != nullptr);
    _impl_.furniture_->Clear();
  }
  ::memset(&_impl_.seatlength_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.armrests_) -
      reinterpret_cast<char*>(&_impl_.seatlength_)) + sizeof(_impl_.armrests_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Chair::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> Chair::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Chair, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Chair_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .com.cps2004.Furniture furniture = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Chair, _impl_.furniture_)}},
    // double seatLength = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Chair, _impl_.seatlength_)}},
    // bool armRests = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Chair, _impl_.armrests_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Chair, _impl_.armrests_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Furniture furniture = 1;
    {PROTOBUF_FIELD_OFFSET(Chair, _impl_.furniture_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double seatLength = 2;
    {PROTOBUF_FIELD_OFFSET(Chair, _impl_.seatlength_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // bool armRests = 3;
    {PROTOBUF_FIELD_OFFSET(Chair, _impl_.armrests_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Furniture>()},
  }}, {{
  }},
};

::uint8_t* Chair::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Chair)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Furniture furniture = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::furniture(this),
        _Internal::furniture(this).GetCachedSize(), target, stream);
  }

  // double seatLength = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_seatlength = this->_internal_seatlength();
  ::uint64_t raw_seatlength;
  memcpy(&raw_seatlength, &tmp_seatlength, sizeof(tmp_seatlength));
  if (raw_seatlength != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_seatlength(), target);
  }

  // bool armRests = 3;
  if (this->_internal_armrests() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_armrests(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Chair)
  return target;
}

::size_t Chair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Chair)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.cps2004.Furniture furniture = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.furniture_);
  }

  // double seatLength = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_seatlength = this->_internal_seatlength();
  ::uint64_t raw_seatlength;
  memcpy(&raw_seatlength, &tmp_seatlength, sizeof(tmp_seatlength));
  if (raw_seatlength != 0) {
    total_size += 9;
  }

  // bool armRests = 3;
  if (this->_internal_armrests() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Chair::_class_data_ = {
    Chair::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Chair::GetClassData() const {
  return &_class_data_;
}

void Chair::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Chair*>(&to_msg);
  auto& from = static_cast<const Chair&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Chair)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_furniture()->::com::cps2004::Furniture::MergeFrom(
        from._internal_furniture());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_seatlength = from._internal_seatlength();
  ::uint64_t raw_seatlength;
  memcpy(&raw_seatlength, &tmp_seatlength, sizeof(tmp_seatlength));
  if (raw_seatlength != 0) {
    _this->_internal_set_seatlength(from._internal_seatlength());
  }
  if (from._internal_armrests() != 0) {
    _this->_internal_set_armrests(from._internal_armrests());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Chair::CopyFrom(const Chair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Chair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Chair::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Chair::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Chair::InternalSwap(Chair* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Chair, _impl_.armrests_)
      + sizeof(Chair::_impl_.armrests_)
      - PROTOBUF_FIELD_OFFSET(Chair, _impl_.furniture_)>(
          reinterpret_cast<char*>(&_impl_.furniture_),
          reinterpret_cast<char*>(&other->_impl_.furniture_));
}

::google::protobuf::Metadata Chair::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[21]);
}
// ===================================================================

class VideoGame::_Internal {
 public:
  using HasBits = decltype(std::declval<VideoGame>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VideoGame, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::com::cps2004::VideoGame, _impl_._oneof_case_);
  static const ::com::cps2004::Action& action(const VideoGame* msg);
  static const ::com::cps2004::RPG& rpg(const VideoGame* msg);
  static const ::com::cps2004::Product& product(const VideoGame* msg);
  static void set_has_product(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Action& VideoGame::_Internal::action(const VideoGame* msg) {
  return *msg->_impl_.videoGame_type_.action_;
}
const ::com::cps2004::RPG& VideoGame::_Internal::rpg(const VideoGame* msg) {
  return *msg->_impl_.videoGame_type_.rpg_;
}
const ::com::cps2004::Product& VideoGame::_Internal::product(const VideoGame* msg) {
  return *msg->_impl_.product_;
}
void VideoGame::set_allocated_action(::com::cps2004::Action* action) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_videoGame_type();
  if (action) {
    ::google::protobuf::Arena* submessage_arena = action->GetArena();
    if (message_arena != submessage_arena) {
      action = ::google::protobuf::internal::GetOwnedMessage(message_arena, action, submessage_arena);
    }
    set_has_action();
    _impl_.videoGame_type_.action_ = action;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.VideoGame.action)
}
void VideoGame::set_allocated_rpg(::com::cps2004::RPG* rpg) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_videoGame_type();
  if (rpg) {
    ::google::protobuf::Arena* submessage_arena = rpg->GetArena();
    if (message_arena != submessage_arena) {
      rpg = ::google::protobuf::internal::GetOwnedMessage(message_arena, rpg, submessage_arena);
    }
    set_has_rpg();
    _impl_.videoGame_type_.rpg_ = rpg;
  }
  // @@protoc_insertion_point(field_set_allocated:com.cps2004.VideoGame.rpg)
}
VideoGame::VideoGame(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.VideoGame)
}
inline PROTOBUF_NDEBUG_INLINE VideoGame::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        platform_(arena, from.platform_),
        developer_(arena, from.developer_),
        videoGame_type_{},
        _oneof_case_{from._oneof_case_[0]} {}

VideoGame::VideoGame(
    ::google::protobuf::Arena* arena,
    const VideoGame& from)
    : ::google::protobuf::Message(arena) {
  VideoGame* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.product_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Product>(arena, *from._impl_.product_)
                : nullptr;
  switch (videoGame_type_case()) {
    case VIDEOGAME_TYPE_NOT_SET:
      break;
      case kAction:
        _impl_.videoGame_type_.action_ = CreateMaybeMessage<::com::cps2004::Action>(arena, *from._impl_.videoGame_type_.action_);
        break;
      case kRpg:
        _impl_.videoGame_type_.rpg_ = CreateMaybeMessage<::com::cps2004::RPG>(arena, *from._impl_.videoGame_type_.rpg_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:com.cps2004.VideoGame)
}
inline PROTOBUF_NDEBUG_INLINE VideoGame::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        platform_(arena),
        developer_(arena),
        videoGame_type_{},
        _oneof_case_{} {}

inline void VideoGame::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.product_ = {};
}
VideoGame::~VideoGame() {
  // @@protoc_insertion_point(destructor:com.cps2004.VideoGame)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VideoGame::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.platform_.Destroy();
  _impl_.developer_.Destroy();
  delete _impl_.product_;
  if (has_videoGame_type()) {
    clear_videoGame_type();
  }
  _impl_.~Impl_();
}

void VideoGame::clear_videoGame_type() {
// @@protoc_insertion_point(one_of_clear_start:com.cps2004.VideoGame)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (videoGame_type_case()) {
    case kAction: {
      if (GetArena() == nullptr) {
        delete _impl_.videoGame_type_.action_;
      }
      break;
    }
    case kRpg: {
      if (GetArena() == nullptr) {
        delete _impl_.videoGame_type_.rpg_;
      }
      break;
    }
    case VIDEOGAME_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VIDEOGAME_TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void VideoGame::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.VideoGame)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.platform_.ClearToEmpty();
  _impl_.developer_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.product_ != nullptr);
    _impl_.product_->Clear();
  }
  clear_videoGame_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VideoGame::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 3, 47, 2> VideoGame::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VideoGame, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VideoGame_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string platform = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(VideoGame, _impl_.platform_)}},
    // string developer = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(VideoGame, _impl_.developer_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .com.cps2004.Product product = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 2, PROTOBUF_FIELD_OFFSET(VideoGame, _impl_.product_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Action action = 1;
    {PROTOBUF_FIELD_OFFSET(VideoGame, _impl_.videoGame_type_.action_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.RPG rpg = 2;
    {PROTOBUF_FIELD_OFFSET(VideoGame, _impl_.videoGame_type_.rpg_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.Product product = 3;
    {PROTOBUF_FIELD_OFFSET(VideoGame, _impl_.product_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string platform = 4;
    {PROTOBUF_FIELD_OFFSET(VideoGame, _impl_.platform_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string developer = 5;
    {PROTOBUF_FIELD_OFFSET(VideoGame, _impl_.developer_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Action>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::RPG>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Product>()},
  }}, {{
    "\25\0\0\0\10\11\0\0"
    "com.cps2004.VideoGame"
    "platform"
    "developer"
  }},
};

::uint8_t* VideoGame::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.VideoGame)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (videoGame_type_case()) {
    case kAction: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::action(this),
          _Internal::action(this).GetCachedSize(), target, stream);
      break;
    }
    case kRpg: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::rpg(this),
          _Internal::rpg(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Product product = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::product(this),
        _Internal::product(this).GetCachedSize(), target, stream);
  }

  // string platform = 4;
  if (!this->_internal_platform().empty()) {
    const std::string& _s = this->_internal_platform();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.VideoGame.platform");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string developer = 5;
  if (!this->_internal_developer().empty()) {
    const std::string& _s = this->_internal_developer();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.VideoGame.developer");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.VideoGame)
  return target;
}

::size_t VideoGame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.VideoGame)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string platform = 4;
  if (!this->_internal_platform().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_platform());
  }

  // string developer = 5;
  if (!this->_internal_developer().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_developer());
  }

  // .com.cps2004.Product product = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.product_);
  }

  switch (videoGame_type_case()) {
    // .com.cps2004.Action action = 1;
    case kAction: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.videoGame_type_.action_);
      break;
    }
    // .com.cps2004.RPG rpg = 2;
    case kRpg: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.videoGame_type_.rpg_);
      break;
    }
    case VIDEOGAME_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VideoGame::_class_data_ = {
    VideoGame::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VideoGame::GetClassData() const {
  return &_class_data_;
}

void VideoGame::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VideoGame*>(&to_msg);
  auto& from = static_cast<const VideoGame&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.VideoGame)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_platform().empty()) {
    _this->_internal_set_platform(from._internal_platform());
  }
  if (!from._internal_developer().empty()) {
    _this->_internal_set_developer(from._internal_developer());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_product()->::com::cps2004::Product::MergeFrom(
        from._internal_product());
  }
  switch (from.videoGame_type_case()) {
    case kAction: {
      _this->_internal_mutable_action()->::com::cps2004::Action::MergeFrom(
          from._internal_action());
      break;
    }
    case kRpg: {
      _this->_internal_mutable_rpg()->::com::cps2004::RPG::MergeFrom(
          from._internal_rpg());
      break;
    }
    case VIDEOGAME_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VideoGame::CopyFrom(const VideoGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.VideoGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VideoGame::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VideoGame::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VideoGame::InternalSwap(VideoGame* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.platform_, &other->_impl_.platform_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.developer_, &other->_impl_.developer_, arena);
  swap(_impl_.product_, other->_impl_.product_);
  swap(_impl_.videoGame_type_, other->_impl_.videoGame_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata VideoGame::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[22]);
}
// ===================================================================

class Action::_Internal {
 public:
  using HasBits = decltype(std::declval<Action>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Action, _impl_._has_bits_);
  static const ::com::cps2004::VideoGame& videogame(const Action* msg);
  static void set_has_videogame(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::VideoGame& Action::_Internal::videogame(const Action* msg) {
  return *msg->_impl_.videogame_;
}
Action::Action(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Action)
}
inline PROTOBUF_NDEBUG_INLINE Action::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        rating_(arena, from.rating_) {}

Action::Action(
    ::google::protobuf::Arena* arena,
    const Action& from)
    : ::google::protobuf::Message(arena) {
  Action* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.videogame_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::VideoGame>(arena, *from._impl_.videogame_)
                : nullptr;
  _impl_.noofplayers_ = from._impl_.noofplayers_;

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Action)
}
inline PROTOBUF_NDEBUG_INLINE Action::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        rating_(arena) {}

inline void Action::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, videogame_),
           0,
           offsetof(Impl_, noofplayers_) -
               offsetof(Impl_, videogame_) +
               sizeof(Impl_::noofplayers_));
}
Action::~Action() {
  // @@protoc_insertion_point(destructor:com.cps2004.Action)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Action::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.rating_.Destroy();
  delete _impl_.videogame_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Action::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Action)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rating_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.videogame_ != nullptr);
    _impl_.videogame_->Clear();
  }
  _impl_.noofplayers_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Action::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 33, 2> Action::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Action, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Action_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .com.cps2004.VideoGame videoGame = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Action, _impl_.videogame_)}},
    // int32 noOfPlayers = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Action, _impl_.noofplayers_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Action, _impl_.noofplayers_)}},
    // string rating = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Action, _impl_.rating_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.VideoGame videoGame = 1;
    {PROTOBUF_FIELD_OFFSET(Action, _impl_.videogame_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 noOfPlayers = 2;
    {PROTOBUF_FIELD_OFFSET(Action, _impl_.noofplayers_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string rating = 3;
    {PROTOBUF_FIELD_OFFSET(Action, _impl_.rating_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::VideoGame>()},
  }}, {{
    "\22\0\0\6\0\0\0\0"
    "com.cps2004.Action"
    "rating"
  }},
};

::uint8_t* Action::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Action)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.VideoGame videoGame = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::videogame(this),
        _Internal::videogame(this).GetCachedSize(), target, stream);
  }

  // int32 noOfPlayers = 2;
  if (this->_internal_noofplayers() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_noofplayers(), target);
  }

  // string rating = 3;
  if (!this->_internal_rating().empty()) {
    const std::string& _s = this->_internal_rating();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Action.rating");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Action)
  return target;
}

::size_t Action::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Action)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rating = 3;
  if (!this->_internal_rating().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_rating());
  }

  // .com.cps2004.VideoGame videoGame = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.videogame_);
  }

  // int32 noOfPlayers = 2;
  if (this->_internal_noofplayers() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_noofplayers());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Action::_class_data_ = {
    Action::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Action::GetClassData() const {
  return &_class_data_;
}

void Action::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Action*>(&to_msg);
  auto& from = static_cast<const Action&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Action)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rating().empty()) {
    _this->_internal_set_rating(from._internal_rating());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_videogame()->::com::cps2004::VideoGame::MergeFrom(
        from._internal_videogame());
  }
  if (from._internal_noofplayers() != 0) {
    _this->_internal_set_noofplayers(from._internal_noofplayers());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Action::CopyFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Action::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Action::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Action::InternalSwap(Action* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rating_, &other->_impl_.rating_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Action, _impl_.noofplayers_)
      + sizeof(Action::_impl_.noofplayers_)
      - PROTOBUF_FIELD_OFFSET(Action, _impl_.videogame_)>(
          reinterpret_cast<char*>(&_impl_.videogame_),
          reinterpret_cast<char*>(&other->_impl_.videogame_));
}

::google::protobuf::Metadata Action::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[23]);
}
// ===================================================================

class RPG::_Internal {
 public:
  using HasBits = decltype(std::declval<RPG>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RPG, _impl_._has_bits_);
  static const ::com::cps2004::VideoGame& videogame(const RPG* msg);
  static void set_has_videogame(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::VideoGame& RPG::_Internal::videogame(const RPG* msg) {
  return *msg->_impl_.videogame_;
}
RPG::RPG(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.RPG)
}
inline PROTOBUF_NDEBUG_INLINE RPG::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        story_(arena, from.story_) {}

RPG::RPG(
    ::google::protobuf::Arena* arena,
    const RPG& from)
    : ::google::protobuf::Message(arena) {
  RPG* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.videogame_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::VideoGame>(arena, *from._impl_.videogame_)
                : nullptr;
  _impl_.multiplayer_ = from._impl_.multiplayer_;

  // @@protoc_insertion_point(copy_constructor:com.cps2004.RPG)
}
inline PROTOBUF_NDEBUG_INLINE RPG::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        story_(arena) {}

inline void RPG::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, videogame_),
           0,
           offsetof(Impl_, multiplayer_) -
               offsetof(Impl_, videogame_) +
               sizeof(Impl_::multiplayer_));
}
RPG::~RPG() {
  // @@protoc_insertion_point(destructor:com.cps2004.RPG)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RPG::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.story_.Destroy();
  delete _impl_.videogame_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RPG::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.RPG)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.story_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.videogame_ != nullptr);
    _impl_.videogame_->Clear();
  }
  _impl_.multiplayer_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RPG::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 29, 2> RPG::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RPG, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RPG_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .com.cps2004.VideoGame videoGame = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RPG, _impl_.videogame_)}},
    // string story = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RPG, _impl_.story_)}},
    // bool multiplayer = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RPG, _impl_.multiplayer_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RPG, _impl_.multiplayer_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.VideoGame videoGame = 1;
    {PROTOBUF_FIELD_OFFSET(RPG, _impl_.videogame_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string story = 2;
    {PROTOBUF_FIELD_OFFSET(RPG, _impl_.story_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool multiplayer = 3;
    {PROTOBUF_FIELD_OFFSET(RPG, _impl_.multiplayer_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::VideoGame>()},
  }}, {{
    "\17\0\5\0\0\0\0\0"
    "com.cps2004.RPG"
    "story"
  }},
};

::uint8_t* RPG::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.RPG)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.VideoGame videoGame = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::videogame(this),
        _Internal::videogame(this).GetCachedSize(), target, stream);
  }

  // string story = 2;
  if (!this->_internal_story().empty()) {
    const std::string& _s = this->_internal_story();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.RPG.story");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // bool multiplayer = 3;
  if (this->_internal_multiplayer() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_multiplayer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.RPG)
  return target;
}

::size_t RPG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.RPG)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string story = 2;
  if (!this->_internal_story().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_story());
  }

  // .com.cps2004.VideoGame videoGame = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.videogame_);
  }

  // bool multiplayer = 3;
  if (this->_internal_multiplayer() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RPG::_class_data_ = {
    RPG::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RPG::GetClassData() const {
  return &_class_data_;
}

void RPG::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RPG*>(&to_msg);
  auto& from = static_cast<const RPG&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.RPG)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_story().empty()) {
    _this->_internal_set_story(from._internal_story());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_videogame()->::com::cps2004::VideoGame::MergeFrom(
        from._internal_videogame());
  }
  if (from._internal_multiplayer() != 0) {
    _this->_internal_set_multiplayer(from._internal_multiplayer());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RPG::CopyFrom(const RPG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.RPG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RPG::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RPG::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RPG::InternalSwap(RPG* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.story_, &other->_impl_.story_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RPG, _impl_.multiplayer_)
      + sizeof(RPG::_impl_.multiplayer_)
      - PROTOBUF_FIELD_OFFSET(RPG, _impl_.videogame_)>(
          reinterpret_cast<char*>(&_impl_.videogame_),
          reinterpret_cast<char*>(&other->_impl_.videogame_));
}

::google::protobuf::Metadata RPG::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[24]);
}
// ===================================================================

class StockItem::_Internal {
 public:
  using HasBits = decltype(std::declval<StockItem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StockItem, _impl_._has_bits_);
  static const ::com::cps2004::Product& product(const StockItem* msg);
  static void set_has_product(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Product& StockItem::_Internal::product(const StockItem* msg) {
  return *msg->_impl_.product_;
}
StockItem::StockItem(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.StockItem)
}
inline PROTOBUF_NDEBUG_INLINE StockItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StockItem::StockItem(
    ::google::protobuf::Arena* arena,
    const StockItem& from)
    : ::google::protobuf::Message(arena) {
  StockItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.product_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Product>(arena, *from._impl_.product_)
                : nullptr;
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:com.cps2004.StockItem)
}
inline PROTOBUF_NDEBUG_INLINE StockItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StockItem::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, product_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, product_) +
               sizeof(Impl_::quantity_));
}
StockItem::~StockItem() {
  // @@protoc_insertion_point(destructor:com.cps2004.StockItem)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StockItem::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.product_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StockItem::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.StockItem)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.product_ != nullptr);
    _impl_.product_->Clear();
  }
  _impl_.quantity_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StockItem::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> StockItem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StockItem, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StockItem_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 quantity = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StockItem, _impl_.quantity_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(StockItem, _impl_.quantity_)}},
    // .com.cps2004.Product product = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StockItem, _impl_.product_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Product product = 1;
    {PROTOBUF_FIELD_OFFSET(StockItem, _impl_.product_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 quantity = 2;
    {PROTOBUF_FIELD_OFFSET(StockItem, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Product>()},
  }}, {{
  }},
};

::uint8_t* StockItem::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.StockItem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Product product = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::product(this),
        _Internal::product(this).GetCachedSize(), target, stream);
  }

  // int32 quantity = 2;
  if (this->_internal_quantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_quantity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.StockItem)
  return target;
}

::size_t StockItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.StockItem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.cps2004.Product product = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.product_);
  }

  // int32 quantity = 2;
  if (this->_internal_quantity() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_quantity());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StockItem::_class_data_ = {
    StockItem::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StockItem::GetClassData() const {
  return &_class_data_;
}

void StockItem::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StockItem*>(&to_msg);
  auto& from = static_cast<const StockItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.StockItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_product()->::com::cps2004::Product::MergeFrom(
        from._internal_product());
  }
  if (from._internal_quantity() != 0) {
    _this->_internal_set_quantity(from._internal_quantity());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StockItem::CopyFrom(const StockItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.StockItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StockItem::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StockItem::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StockItem::InternalSwap(StockItem* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StockItem, _impl_.quantity_)
      + sizeof(StockItem::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(StockItem, _impl_.product_)>(
          reinterpret_cast<char*>(&_impl_.product_),
          reinterpret_cast<char*>(&other->_impl_.product_));
}

::google::protobuf::Metadata StockItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[25]);
}
// ===================================================================

class Stock::_Internal {
 public:
};

Stock::Stock(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Stock)
}
inline PROTOBUF_NDEBUG_INLINE Stock::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : currentstock_{visibility, arena, from.currentstock_},
        _cached_size_{0} {}

Stock::Stock(
    ::google::protobuf::Arena* arena,
    const Stock& from)
    : ::google::protobuf::Message(arena) {
  Stock* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Stock)
}
inline PROTOBUF_NDEBUG_INLINE Stock::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : currentstock_{visibility, arena},
        _cached_size_{0} {}

inline void Stock::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Stock::~Stock() {
  // @@protoc_insertion_point(destructor:com.cps2004.Stock)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Stock::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Stock::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Stock)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.currentstock_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Stock::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Stock::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Stock_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .com.cps2004.StockItem currentstock = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Stock, _impl_.currentstock_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .com.cps2004.StockItem currentstock = 1;
    {PROTOBUF_FIELD_OFFSET(Stock, _impl_.currentstock_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::StockItem>()},
  }}, {{
  }},
};

::uint8_t* Stock::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Stock)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .com.cps2004.StockItem currentstock = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_currentstock_size()); i < n; i++) {
    const auto& repfield = this->_internal_currentstock().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Stock)
  return target;
}

::size_t Stock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Stock)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.cps2004.StockItem currentstock = 1;
  total_size += 1UL * this->_internal_currentstock_size();
  for (const auto& msg : this->_internal_currentstock()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Stock::_class_data_ = {
    Stock::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Stock::GetClassData() const {
  return &_class_data_;
}

void Stock::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Stock*>(&to_msg);
  auto& from = static_cast<const Stock&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Stock)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_currentstock()->MergeFrom(
      from._internal_currentstock());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Stock::CopyFrom(const Stock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Stock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Stock::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Stock::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Stock::InternalSwap(Stock* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.currentstock_.InternalSwap(&other->_impl_.currentstock_);
}

::google::protobuf::Metadata Stock::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[26]);
}
// ===================================================================

class ShipmentItem::_Internal {
 public:
  using HasBits = decltype(std::declval<ShipmentItem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ShipmentItem, _impl_._has_bits_);
  static const ::com::cps2004::Product& product(const ShipmentItem* msg);
  static void set_has_product(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::com::cps2004::Package& package(const ShipmentItem* msg);
  static void set_has_package(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::com::cps2004::Product& ShipmentItem::_Internal::product(const ShipmentItem* msg) {
  return *msg->_impl_.product_;
}
const ::com::cps2004::Package& ShipmentItem::_Internal::package(const ShipmentItem* msg) {
  return *msg->_impl_.package_;
}
ShipmentItem::ShipmentItem(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.ShipmentItem)
}
inline PROTOBUF_NDEBUG_INLINE ShipmentItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ShipmentItem::ShipmentItem(
    ::google::protobuf::Arena* arena,
    const ShipmentItem& from)
    : ::google::protobuf::Message(arena) {
  ShipmentItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.product_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Product>(arena, *from._impl_.product_)
                : nullptr;
  _impl_.package_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::com::cps2004::Package>(arena, *from._impl_.package_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::quantity_));

  // @@protoc_insertion_point(copy_constructor:com.cps2004.ShipmentItem)
}
inline PROTOBUF_NDEBUG_INLINE ShipmentItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ShipmentItem::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, product_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, product_) +
               sizeof(Impl_::quantity_));
}
ShipmentItem::~ShipmentItem() {
  // @@protoc_insertion_point(destructor:com.cps2004.ShipmentItem)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ShipmentItem::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.product_;
  delete _impl_.package_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ShipmentItem::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.ShipmentItem)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.product_ != nullptr);
      _impl_.product_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.package_ != nullptr);
      _impl_.package_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.quantity_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.quantity_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ShipmentItem::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2> ShipmentItem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ShipmentItem, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ShipmentItem_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .com.cps2004.Package package = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(ShipmentItem, _impl_.package_)}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ShipmentItem, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ShipmentItem, _impl_.id_)}},
    // int32 quantity = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ShipmentItem, _impl_.quantity_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ShipmentItem, _impl_.quantity_)}},
    // .com.cps2004.Product product = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ShipmentItem, _impl_.product_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(ShipmentItem, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 quantity = 2;
    {PROTOBUF_FIELD_OFFSET(ShipmentItem, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .com.cps2004.Product product = 3;
    {PROTOBUF_FIELD_OFFSET(ShipmentItem, _impl_.product_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.Package package = 4;
    {PROTOBUF_FIELD_OFFSET(ShipmentItem, _impl_.package_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Product>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Package>()},
  }}, {{
  }},
};

::uint8_t* ShipmentItem::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.ShipmentItem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // int32 quantity = 2;
  if (this->_internal_quantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_quantity(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Product product = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::product(this),
        _Internal::product(this).GetCachedSize(), target, stream);
  }

  // .com.cps2004.Package package = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::package(this),
        _Internal::package(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.ShipmentItem)
  return target;
}

::size_t ShipmentItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.ShipmentItem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .com.cps2004.Product product = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.product_);
    }

    // .com.cps2004.Package package = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.package_);
    }

  }
  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  // int32 quantity = 2;
  if (this->_internal_quantity() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_quantity());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ShipmentItem::_class_data_ = {
    ShipmentItem::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ShipmentItem::GetClassData() const {
  return &_class_data_;
}

void ShipmentItem::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ShipmentItem*>(&to_msg);
  auto& from = static_cast<const ShipmentItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.ShipmentItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_product()->::com::cps2004::Product::MergeFrom(
          from._internal_product());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_package()->::com::cps2004::Package::MergeFrom(
          from._internal_package());
    }
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_quantity() != 0) {
    _this->_internal_set_quantity(from._internal_quantity());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ShipmentItem::CopyFrom(const ShipmentItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.ShipmentItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ShipmentItem::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ShipmentItem::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ShipmentItem::InternalSwap(ShipmentItem* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ShipmentItem, _impl_.quantity_)
      + sizeof(ShipmentItem::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(ShipmentItem, _impl_.product_)>(
          reinterpret_cast<char*>(&_impl_.product_),
          reinterpret_cast<char*>(&other->_impl_.product_));
}

::google::protobuf::Metadata ShipmentItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[27]);
}
// ===================================================================

class Shipment::_Internal {
 public:
  using HasBits = decltype(std::declval<Shipment>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Shipment, _impl_._has_bits_);
  static const ::com::cps2004::Transport& transport(const Shipment* msg);
  static void set_has_transport(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Transport& Shipment::_Internal::transport(const Shipment* msg) {
  return *msg->_impl_.transport_;
}
Shipment::Shipment(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Shipment)
}
inline PROTOBUF_NDEBUG_INLINE Shipment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        packageditems_{visibility, arena, from.packageditems_},
        dispatcheddate_(arena, from.dispatcheddate_) {}

Shipment::Shipment(
    ::google::protobuf::Arena* arena,
    const Shipment& from)
    : ::google::protobuf::Message(arena) {
  Shipment* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.transport_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Transport>(arena, *from._impl_.transport_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, distance_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, distance_),
           offsetof(Impl_, shipmentid_) -
               offsetof(Impl_, distance_) +
               sizeof(Impl_::shipmentid_));

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Shipment)
}
inline PROTOBUF_NDEBUG_INLINE Shipment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        packageditems_{visibility, arena},
        dispatcheddate_(arena) {}

inline void Shipment::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, transport_),
           0,
           offsetof(Impl_, shipmentid_) -
               offsetof(Impl_, transport_) +
               sizeof(Impl_::shipmentid_));
}
Shipment::~Shipment() {
  // @@protoc_insertion_point(destructor:com.cps2004.Shipment)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Shipment::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.dispatcheddate_.Destroy();
  delete _impl_.transport_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Shipment::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Shipment)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.packageditems_.Clear();
  _impl_.dispatcheddate_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.transport_ != nullptr);
    _impl_.transport_->Clear();
  }
  ::memset(&_impl_.distance_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.shipmentid_) -
      reinterpret_cast<char*>(&_impl_.distance_)) + sizeof(_impl_.shipmentid_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Shipment::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 43, 2> Shipment::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Shipment, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Shipment_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .com.cps2004.Transport transport = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Shipment, _impl_.transport_)}},
    // repeated .com.cps2004.ShipmentItem packagedItems = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Shipment, _impl_.packageditems_)}},
    // bool dispatched = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Shipment, _impl_.dispatched_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Shipment, _impl_.dispatched_)}},
    // double distance = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(Shipment, _impl_.distance_)}},
    // string dispatchedDate = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Shipment, _impl_.dispatcheddate_)}},
    // int32 shipmentID = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Shipment, _impl_.shipmentid_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Shipment, _impl_.shipmentid_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.cps2004.Transport transport = 1;
    {PROTOBUF_FIELD_OFFSET(Shipment, _impl_.transport_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .com.cps2004.ShipmentItem packagedItems = 2;
    {PROTOBUF_FIELD_OFFSET(Shipment, _impl_.packageditems_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool dispatched = 3;
    {PROTOBUF_FIELD_OFFSET(Shipment, _impl_.dispatched_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // double distance = 4;
    {PROTOBUF_FIELD_OFFSET(Shipment, _impl_.distance_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string dispatchedDate = 5;
    {PROTOBUF_FIELD_OFFSET(Shipment, _impl_.dispatcheddate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 shipmentID = 6;
    {PROTOBUF_FIELD_OFFSET(Shipment, _impl_.shipmentid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Transport>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::ShipmentItem>()},
  }}, {{
    "\24\0\0\0\0\16\0\0"
    "com.cps2004.Shipment"
    "dispatchedDate"
  }},
};

::uint8_t* Shipment::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Shipment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Transport transport = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::transport(this),
        _Internal::transport(this).GetCachedSize(), target, stream);
  }

  // repeated .com.cps2004.ShipmentItem packagedItems = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_packageditems_size()); i < n; i++) {
    const auto& repfield = this->_internal_packageditems().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // bool dispatched = 3;
  if (this->_internal_dispatched() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_dispatched(), target);
  }

  // double distance = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_distance = this->_internal_distance();
  ::uint64_t raw_distance;
  memcpy(&raw_distance, &tmp_distance, sizeof(tmp_distance));
  if (raw_distance != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_distance(), target);
  }

  // string dispatchedDate = 5;
  if (!this->_internal_dispatcheddate().empty()) {
    const std::string& _s = this->_internal_dispatcheddate();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Shipment.dispatchedDate");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // int32 shipmentID = 6;
  if (this->_internal_shipmentid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_shipmentid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Shipment)
  return target;
}

::size_t Shipment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Shipment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.cps2004.ShipmentItem packagedItems = 2;
  total_size += 1UL * this->_internal_packageditems_size();
  for (const auto& msg : this->_internal_packageditems()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string dispatchedDate = 5;
  if (!this->_internal_dispatcheddate().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_dispatcheddate());
  }

  // .com.cps2004.Transport transport = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.transport_);
  }

  // double distance = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_distance = this->_internal_distance();
  ::uint64_t raw_distance;
  memcpy(&raw_distance, &tmp_distance, sizeof(tmp_distance));
  if (raw_distance != 0) {
    total_size += 9;
  }

  // bool dispatched = 3;
  if (this->_internal_dispatched() != 0) {
    total_size += 2;
  }

  // int32 shipmentID = 6;
  if (this->_internal_shipmentid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_shipmentid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Shipment::_class_data_ = {
    Shipment::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Shipment::GetClassData() const {
  return &_class_data_;
}

void Shipment::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Shipment*>(&to_msg);
  auto& from = static_cast<const Shipment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Shipment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_packageditems()->MergeFrom(
      from._internal_packageditems());
  if (!from._internal_dispatcheddate().empty()) {
    _this->_internal_set_dispatcheddate(from._internal_dispatcheddate());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_transport()->::com::cps2004::Transport::MergeFrom(
        from._internal_transport());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_distance = from._internal_distance();
  ::uint64_t raw_distance;
  memcpy(&raw_distance, &tmp_distance, sizeof(tmp_distance));
  if (raw_distance != 0) {
    _this->_internal_set_distance(from._internal_distance());
  }
  if (from._internal_dispatched() != 0) {
    _this->_internal_set_dispatched(from._internal_dispatched());
  }
  if (from._internal_shipmentid() != 0) {
    _this->_internal_set_shipmentid(from._internal_shipmentid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Shipment::CopyFrom(const Shipment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Shipment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Shipment::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Shipment::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Shipment::InternalSwap(Shipment* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.packageditems_.InternalSwap(&other->_impl_.packageditems_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dispatcheddate_, &other->_impl_.dispatcheddate_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Shipment, _impl_.shipmentid_)
      + sizeof(Shipment::_impl_.shipmentid_)
      - PROTOBUF_FIELD_OFFSET(Shipment, _impl_.transport_)>(
          reinterpret_cast<char*>(&_impl_.transport_),
          reinterpret_cast<char*>(&other->_impl_.transport_));
}

::google::protobuf::Metadata Shipment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[28]);
}
// ===================================================================

class Customer::_Internal {
 public:
};

Customer::Customer(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.Customer)
}
inline PROTOBUF_NDEBUG_INLINE Customer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : shipments_{visibility, arena, from.shipments_},
        name_(arena, from.name_),
        address_(arena, from.address_),
        _cached_size_{0} {}

Customer::Customer(
    ::google::protobuf::Arena* arena,
    const Customer& from)
    : ::google::protobuf::Message(arena) {
  Customer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, distancefromwarehouse_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, distancefromwarehouse_),
           offsetof(Impl_, id_) -
               offsetof(Impl_, distancefromwarehouse_) +
               sizeof(Impl_::id_));

  // @@protoc_insertion_point(copy_constructor:com.cps2004.Customer)
}
inline PROTOBUF_NDEBUG_INLINE Customer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : shipments_{visibility, arena},
        name_(arena),
        address_(arena),
        _cached_size_{0} {}

inline void Customer::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, distancefromwarehouse_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, distancefromwarehouse_) +
               sizeof(Impl_::id_));
}
Customer::~Customer() {
  // @@protoc_insertion_point(destructor:com.cps2004.Customer)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Customer::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.address_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Customer::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.Customer)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.shipments_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.address_.ClearToEmpty();
  ::memset(&_impl_.distancefromwarehouse_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.id_) -
      reinterpret_cast<char*>(&_impl_.distancefromwarehouse_)) + sizeof(_impl_.id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Customer::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 40, 2> Customer::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Customer_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Customer, _impl_.name_)}},
    // string address = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Customer, _impl_.address_)}},
    // int32 ID = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Customer, _impl_.id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Customer, _impl_.id_)}},
    // double distanceFromWarehouse = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(Customer, _impl_.distancefromwarehouse_)}},
    // repeated .com.cps2004.Shipment shipments = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Customer, _impl_.shipments_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Customer, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string address = 2;
    {PROTOBUF_FIELD_OFFSET(Customer, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 ID = 3;
    {PROTOBUF_FIELD_OFFSET(Customer, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // double distanceFromWarehouse = 4;
    {PROTOBUF_FIELD_OFFSET(Customer, _impl_.distancefromwarehouse_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // repeated .com.cps2004.Shipment shipments = 5;
    {PROTOBUF_FIELD_OFFSET(Customer, _impl_.shipments_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Shipment>()},
  }}, {{
    "\24\4\7\0\0\0\0\0"
    "com.cps2004.Customer"
    "name"
    "address"
  }},
};

::uint8_t* Customer::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.Customer)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Customer.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string address = 2;
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.cps2004.Customer.address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 ID = 3;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_id(), target);
  }

  // double distanceFromWarehouse = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_distancefromwarehouse = this->_internal_distancefromwarehouse();
  ::uint64_t raw_distancefromwarehouse;
  memcpy(&raw_distancefromwarehouse, &tmp_distancefromwarehouse, sizeof(tmp_distancefromwarehouse));
  if (raw_distancefromwarehouse != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_distancefromwarehouse(), target);
  }

  // repeated .com.cps2004.Shipment shipments = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_shipments_size()); i < n; i++) {
    const auto& repfield = this->_internal_shipments().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.Customer)
  return target;
}

::size_t Customer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.Customer)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.cps2004.Shipment shipments = 5;
  total_size += 1UL * this->_internal_shipments_size();
  for (const auto& msg : this->_internal_shipments()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string address = 2;
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_address());
  }

  // double distanceFromWarehouse = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_distancefromwarehouse = this->_internal_distancefromwarehouse();
  ::uint64_t raw_distancefromwarehouse;
  memcpy(&raw_distancefromwarehouse, &tmp_distancefromwarehouse, sizeof(tmp_distancefromwarehouse));
  if (raw_distancefromwarehouse != 0) {
    total_size += 9;
  }

  // int32 ID = 3;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Customer::_class_data_ = {
    Customer::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Customer::GetClassData() const {
  return &_class_data_;
}

void Customer::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Customer*>(&to_msg);
  auto& from = static_cast<const Customer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.Customer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_shipments()->MergeFrom(
      from._internal_shipments());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_distancefromwarehouse = from._internal_distancefromwarehouse();
  ::uint64_t raw_distancefromwarehouse;
  memcpy(&raw_distancefromwarehouse, &tmp_distancefromwarehouse, sizeof(tmp_distancefromwarehouse));
  if (raw_distancefromwarehouse != 0) {
    _this->_internal_set_distancefromwarehouse(from._internal_distancefromwarehouse());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Customer::CopyFrom(const Customer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.Customer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Customer::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Customer::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Customer::InternalSwap(Customer* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.shipments_.InternalSwap(&other->_impl_.shipments_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Customer, _impl_.id_)
      + sizeof(Customer::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(Customer, _impl_.distancefromwarehouse_)>(
          reinterpret_cast<char*>(&_impl_.distancefromwarehouse_),
          reinterpret_cast<char*>(&other->_impl_.distancefromwarehouse_));
}

::google::protobuf::Metadata Customer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[29]);
}
// ===================================================================

class State::_Internal {
 public:
  using HasBits = decltype(std::declval<State>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(State, _impl_._has_bits_);
  static const ::com::cps2004::Stock& stock(const State* msg);
  static void set_has_stock(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::cps2004::Stock& State::_Internal::stock(const State* msg) {
  return *msg->_impl_.stock_;
}
State::State(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.cps2004.State)
}
inline PROTOBUF_NDEBUG_INLINE State::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        transports_{visibility, arena, from.transports_},
        suppliers_{visibility, arena, from.suppliers_},
        customers_{visibility, arena, from.customers_},
        packages_{visibility, arena, from.packages_} {}

State::State(
    ::google::protobuf::Arena* arena,
    const State& from)
    : ::google::protobuf::Message(arena) {
  State* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.stock_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::com::cps2004::Stock>(arena, *from._impl_.stock_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:com.cps2004.State)
}
inline PROTOBUF_NDEBUG_INLINE State::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        transports_{visibility, arena},
        suppliers_{visibility, arena},
        customers_{visibility, arena},
        packages_{visibility, arena} {}

inline void State::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.stock_ = {};
}
State::~State() {
  // @@protoc_insertion_point(destructor:com.cps2004.State)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void State::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.stock_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void State::Clear() {
// @@protoc_insertion_point(message_clear_start:com.cps2004.State)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.transports_.Clear();
  _impl_.suppliers_.Clear();
  _impl_.customers_.Clear();
  _impl_.packages_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.stock_ != nullptr);
    _impl_.stock_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* State::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2> State::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(State, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_State_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .com.cps2004.Transport transports = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(State, _impl_.transports_)}},
    // repeated .com.cps2004.Supplier suppliers = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(State, _impl_.suppliers_)}},
    // repeated .com.cps2004.Customer customers = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(State, _impl_.customers_)}},
    // repeated .com.cps2004.Package packages = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(State, _impl_.packages_)}},
    // .com.cps2004.Stock stock = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 4, PROTOBUF_FIELD_OFFSET(State, _impl_.stock_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .com.cps2004.Transport transports = 1;
    {PROTOBUF_FIELD_OFFSET(State, _impl_.transports_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .com.cps2004.Supplier suppliers = 2;
    {PROTOBUF_FIELD_OFFSET(State, _impl_.suppliers_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .com.cps2004.Customer customers = 3;
    {PROTOBUF_FIELD_OFFSET(State, _impl_.customers_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .com.cps2004.Package packages = 4;
    {PROTOBUF_FIELD_OFFSET(State, _impl_.packages_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.cps2004.Stock stock = 5;
    {PROTOBUF_FIELD_OFFSET(State, _impl_.stock_), _Internal::kHasBitsOffset + 0, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::cps2004::Transport>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Supplier>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Customer>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Package>()},
    {::_pbi::TcParser::GetTable<::com::cps2004::Stock>()},
  }}, {{
  }},
};

::uint8_t* State::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.cps2004.State)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .com.cps2004.Transport transports = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_transports_size()); i < n; i++) {
    const auto& repfield = this->_internal_transports().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .com.cps2004.Supplier suppliers = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_suppliers_size()); i < n; i++) {
    const auto& repfield = this->_internal_suppliers().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .com.cps2004.Customer customers = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_customers_size()); i < n; i++) {
    const auto& repfield = this->_internal_customers().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .com.cps2004.Package packages = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_packages_size()); i < n; i++) {
    const auto& repfield = this->_internal_packages().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .com.cps2004.Stock stock = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::stock(this),
        _Internal::stock(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.cps2004.State)
  return target;
}

::size_t State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.cps2004.State)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.cps2004.Transport transports = 1;
  total_size += 1UL * this->_internal_transports_size();
  for (const auto& msg : this->_internal_transports()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .com.cps2004.Supplier suppliers = 2;
  total_size += 1UL * this->_internal_suppliers_size();
  for (const auto& msg : this->_internal_suppliers()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .com.cps2004.Customer customers = 3;
  total_size += 1UL * this->_internal_customers_size();
  for (const auto& msg : this->_internal_customers()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .com.cps2004.Package packages = 4;
  total_size += 1UL * this->_internal_packages_size();
  for (const auto& msg : this->_internal_packages()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .com.cps2004.Stock stock = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.stock_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData State::_class_data_ = {
    State::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* State::GetClassData() const {
  return &_class_data_;
}

void State::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<State*>(&to_msg);
  auto& from = static_cast<const State&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.cps2004.State)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_transports()->MergeFrom(
      from._internal_transports());
  _this->_internal_mutable_suppliers()->MergeFrom(
      from._internal_suppliers());
  _this->_internal_mutable_customers()->MergeFrom(
      from._internal_customers());
  _this->_internal_mutable_packages()->MergeFrom(
      from._internal_packages());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_stock()->::com::cps2004::Stock::MergeFrom(
        from._internal_stock());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void State::CopyFrom(const State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.cps2004.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool State::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* State::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void State::InternalSwap(State* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.transports_.InternalSwap(&other->_impl_.transports_);
  _impl_.suppliers_.InternalSwap(&other->_impl_.suppliers_);
  _impl_.customers_.InternalSwap(&other->_impl_.customers_);
  _impl_.packages_.InternalSwap(&other->_impl_.packages_);
  swap(_impl_.stock_, other->_impl_.stock_);
}

::google::protobuf::Metadata State::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fstructures_2eproto_getter, &descriptor_table_data_5fstructures_2eproto_once,
      file_level_metadata_data_5fstructures_2eproto[30]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace cps2004
}  // namespace com
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
